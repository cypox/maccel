-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity macc_par_convs is
generic (
    C_S_AXI_CTRL_BUS_ADDR_WIDTH : INTEGER := 4;
    C_S_AXI_CTRL_BUS_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    A_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_EN_A : OUT STD_LOGIC;
    A_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    A_Clk_A : OUT STD_LOGIC;
    A_Rst_A : OUT STD_LOGIC;
    A_Addr_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_EN_B : OUT STD_LOGIC;
    A_WEN_B : OUT STD_LOGIC_VECTOR (3 downto 0);
    A_Din_B : OUT STD_LOGIC_VECTOR (31 downto 0);
    A_Dout_B : IN STD_LOGIC_VECTOR (31 downto 0);
    A_Clk_B : OUT STD_LOGIC;
    A_Rst_B : OUT STD_LOGIC;
    B_0_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_0_EN_A : OUT STD_LOGIC;
    B_0_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_0_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_0_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_0_Clk_A : OUT STD_LOGIC;
    B_0_Rst_A : OUT STD_LOGIC;
    B_1_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_1_EN_A : OUT STD_LOGIC;
    B_1_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_1_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_1_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_1_Clk_A : OUT STD_LOGIC;
    B_1_Rst_A : OUT STD_LOGIC;
    B_2_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_2_EN_A : OUT STD_LOGIC;
    B_2_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_2_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_2_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_2_Clk_A : OUT STD_LOGIC;
    B_2_Rst_A : OUT STD_LOGIC;
    B_3_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_3_EN_A : OUT STD_LOGIC;
    B_3_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_3_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_3_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_3_Clk_A : OUT STD_LOGIC;
    B_3_Rst_A : OUT STD_LOGIC;
    B_4_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_4_EN_A : OUT STD_LOGIC;
    B_4_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_4_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_4_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_4_Clk_A : OUT STD_LOGIC;
    B_4_Rst_A : OUT STD_LOGIC;
    B_5_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_5_EN_A : OUT STD_LOGIC;
    B_5_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_5_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_5_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_5_Clk_A : OUT STD_LOGIC;
    B_5_Rst_A : OUT STD_LOGIC;
    B_6_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_6_EN_A : OUT STD_LOGIC;
    B_6_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_6_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_6_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_6_Clk_A : OUT STD_LOGIC;
    B_6_Rst_A : OUT STD_LOGIC;
    B_7_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_7_EN_A : OUT STD_LOGIC;
    B_7_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_7_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_7_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_7_Clk_A : OUT STD_LOGIC;
    B_7_Rst_A : OUT STD_LOGIC;
    B_8_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_8_EN_A : OUT STD_LOGIC;
    B_8_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_8_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_8_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_8_Clk_A : OUT STD_LOGIC;
    B_8_Rst_A : OUT STD_LOGIC;
    B_9_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_9_EN_A : OUT STD_LOGIC;
    B_9_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_9_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_9_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_9_Clk_A : OUT STD_LOGIC;
    B_9_Rst_A : OUT STD_LOGIC;
    B_10_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_10_EN_A : OUT STD_LOGIC;
    B_10_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_10_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_10_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_10_Clk_A : OUT STD_LOGIC;
    B_10_Rst_A : OUT STD_LOGIC;
    B_11_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_11_EN_A : OUT STD_LOGIC;
    B_11_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_11_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_11_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_11_Clk_A : OUT STD_LOGIC;
    B_11_Rst_A : OUT STD_LOGIC;
    B_12_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_12_EN_A : OUT STD_LOGIC;
    B_12_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_12_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_12_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_12_Clk_A : OUT STD_LOGIC;
    B_12_Rst_A : OUT STD_LOGIC;
    B_13_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_13_EN_A : OUT STD_LOGIC;
    B_13_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_13_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_13_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_13_Clk_A : OUT STD_LOGIC;
    B_13_Rst_A : OUT STD_LOGIC;
    B_14_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_14_EN_A : OUT STD_LOGIC;
    B_14_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_14_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_14_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_14_Clk_A : OUT STD_LOGIC;
    B_14_Rst_A : OUT STD_LOGIC;
    B_15_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_15_EN_A : OUT STD_LOGIC;
    B_15_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_15_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_15_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_15_Clk_A : OUT STD_LOGIC;
    B_15_Rst_A : OUT STD_LOGIC;
    B_16_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_16_EN_A : OUT STD_LOGIC;
    B_16_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_16_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_16_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_16_Clk_A : OUT STD_LOGIC;
    B_16_Rst_A : OUT STD_LOGIC;
    B_17_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_17_EN_A : OUT STD_LOGIC;
    B_17_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_17_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_17_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_17_Clk_A : OUT STD_LOGIC;
    B_17_Rst_A : OUT STD_LOGIC;
    B_18_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_18_EN_A : OUT STD_LOGIC;
    B_18_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_18_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_18_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_18_Clk_A : OUT STD_LOGIC;
    B_18_Rst_A : OUT STD_LOGIC;
    B_19_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_19_EN_A : OUT STD_LOGIC;
    B_19_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_19_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_19_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_19_Clk_A : OUT STD_LOGIC;
    B_19_Rst_A : OUT STD_LOGIC;
    B_20_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_20_EN_A : OUT STD_LOGIC;
    B_20_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_20_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_20_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_20_Clk_A : OUT STD_LOGIC;
    B_20_Rst_A : OUT STD_LOGIC;
    B_21_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_21_EN_A : OUT STD_LOGIC;
    B_21_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_21_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_21_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_21_Clk_A : OUT STD_LOGIC;
    B_21_Rst_A : OUT STD_LOGIC;
    B_22_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_22_EN_A : OUT STD_LOGIC;
    B_22_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_22_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_22_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_22_Clk_A : OUT STD_LOGIC;
    B_22_Rst_A : OUT STD_LOGIC;
    B_23_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_23_EN_A : OUT STD_LOGIC;
    B_23_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_23_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_23_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_23_Clk_A : OUT STD_LOGIC;
    B_23_Rst_A : OUT STD_LOGIC;
    B_24_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_24_EN_A : OUT STD_LOGIC;
    B_24_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_24_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_24_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_24_Clk_A : OUT STD_LOGIC;
    B_24_Rst_A : OUT STD_LOGIC;
    B_25_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_25_EN_A : OUT STD_LOGIC;
    B_25_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_25_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_25_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_25_Clk_A : OUT STD_LOGIC;
    B_25_Rst_A : OUT STD_LOGIC;
    B_26_Addr_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_26_EN_A : OUT STD_LOGIC;
    B_26_WEN_A : OUT STD_LOGIC_VECTOR (3 downto 0);
    B_26_Din_A : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_26_Dout_A : IN STD_LOGIC_VECTOR (31 downto 0);
    B_26_Clk_A : OUT STD_LOGIC;
    B_26_Rst_A : OUT STD_LOGIC;
    C_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    C_TVALID : OUT STD_LOGIC;
    C_TREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_BUS_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_BUS_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_BUS_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_RREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_BUS_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_BUS_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BUS_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BUS_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BUS_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of macc_par_convs is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "macc_par_convs,hls_ip_2017_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu9eg-ffvb1156-1-i-es1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.213000,HLS_SYN_LAT=22107649,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=81,HLS_SYN_FF=1341,HLS_SYN_LUT=2941}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv13_1BC0 : STD_LOGIC_VECTOR (12 downto 0) := "1101111000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv8_DE : STD_LOGIC_VECTOR (7 downto 0) := "11011110";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv9_E0 : STD_LOGIC_VECTOR (8 downto 0) := "011100000";
    constant ap_const_lv9_E1 : STD_LOGIC_VECTOR (8 downto 0) := "011100001";
    constant ap_const_lv9_E2 : STD_LOGIC_VECTOR (8 downto 0) := "011100010";
    constant ap_const_lv10_1C0 : STD_LOGIC_VECTOR (9 downto 0) := "0111000000";
    constant ap_const_lv10_1C1 : STD_LOGIC_VECTOR (9 downto 0) := "0111000001";
    constant ap_const_lv10_1C2 : STD_LOGIC_VECTOR (9 downto 0) := "0111000010";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv17_2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv18_2 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal C_1_data_out : STD_LOGIC_VECTOR (31 downto 0);
    signal C_1_vld_in : STD_LOGIC;
    signal C_1_vld_out : STD_LOGIC;
    signal C_1_ack_in : STD_LOGIC;
    signal C_1_ack_out : STD_LOGIC;
    signal C_1_payload_A : STD_LOGIC_VECTOR (31 downto 0);
    signal C_1_payload_B : STD_LOGIC_VECTOR (31 downto 0);
    signal C_1_sel_rd : STD_LOGIC := '0';
    signal C_1_sel_wr : STD_LOGIC := '0';
    signal C_1_sel : STD_LOGIC;
    signal C_1_load_A : STD_LOGIC;
    signal C_1_load_B : STD_LOGIC;
    signal C_1_state : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal C_1_state_cmp_full : STD_LOGIC;
    signal C_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_6_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_6_reg_1912 : STD_LOGIC_VECTOR (0 downto 0);
    signal center_y_reg_718 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond_flatten_fu_729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal indvar_flatten_next_fu_735_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal indvar_flatten_next_reg_1717 : STD_LOGIC_VECTOR (12 downto 0);
    signal channel_out2_mid2_v_fu_761_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal channel_out2_mid2_v_reg_1722 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_832_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_s_reg_1727 : STD_LOGIC_VECTOR (16 downto 0);
    signal center_x_1_fu_838_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal center_x_1_reg_1732 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_12_0_1_fu_868_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_0_1_reg_1737 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_0_2_fu_904_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_0_2_reg_1742 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_fu_936_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_reg_1747 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_1_fu_968_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_1_reg_1752 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_2_fu_1000_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_1_2_reg_1757 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_2_fu_1032_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_2_reg_1762 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_2_1_fu_1064_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_2_1_reg_1767 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_2_2_fu_1096_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_12_2_2_reg_1772 : STD_LOGIC_VECTOR (17 downto 0);
    signal B_0_addr_reg_1777 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_1_addr_reg_1782 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_2_addr_reg_1787 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_3_addr_reg_1792 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_4_addr_reg_1797 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_5_addr_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_6_addr_reg_1807 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_7_addr_reg_1812 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_8_addr_reg_1817 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_9_addr_reg_1822 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_10_addr_reg_1827 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_11_addr_reg_1832 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_12_addr_reg_1837 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_13_addr_reg_1842 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_14_addr_reg_1847 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_15_addr_reg_1852 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_16_addr_reg_1857 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_17_addr_reg_1862 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_18_addr_reg_1867 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_19_addr_reg_1872 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_20_addr_reg_1877 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_21_addr_reg_1882 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_22_addr_reg_1887 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_23_addr_reg_1892 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_24_addr_reg_1897 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_25_addr_reg_1902 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_26_addr_reg_1907 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal center_y_1_fu_1108_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal center_y_1_reg_1916 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal center_y_cast1_fu_1118_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal center_y_cast1_reg_1921 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_fu_1122_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_reg_1930 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_2_fu_1151_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_reg_1945 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_1_fu_1156_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_1_reg_1952 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_2_fu_1161_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_2_reg_1959 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_1166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1966 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state4_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_18_0_0_1_fu_1172_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_1_reg_1971 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_1_fu_1192_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_1_reg_1981 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_2_fu_1205_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_2_reg_1992 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_fu_1209_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_reg_1999 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_1_fu_1213_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_1_reg_2006 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_2_fu_1217_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_2_reg_2013 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_0_1_fu_1227_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_reg_2020 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state5_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp4_fu_1261_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp4_reg_2035 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state6_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal tmp2_fu_1315_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp2_reg_2050 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_fu_1321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_reg_2055 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state7_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal tmp_18_0_2_1_fu_1327_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_1_reg_2060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_fu_1357_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_reg_2075 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state8_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal tmp9_fu_1383_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp9_reg_2090 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_1_fu_1388_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_1_reg_2095 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state9_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal tmp_18_1_0_2_fu_1394_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_2_reg_2100 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_1_fu_1420_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_1_reg_2115 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state10_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp7_fu_1459_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp7_reg_2130 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_state11_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal tmp15_fu_1503_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp15_reg_2145 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_1_fu_1508_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_1_reg_2150 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_state12_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal tmp_18_1_2_2_fu_1514_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_2_reg_2155 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_state13_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal tmp17_fu_1570_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp17_reg_2180 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_2_fu_1576_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_2_reg_2185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_state14_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal tmp_18_2_1_fu_1582_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_reg_2190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_2_fu_1614_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_2_reg_2205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_state15_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal tmp19_fu_1634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp19_reg_2220 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_fu_1639_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_reg_2225 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_state16_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_18_2_2_1_fu_1645_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_1_reg_2230 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_3_2_2_2_fu_1706_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal indvar_flatten_reg_685 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal channel_out_reg_696 : STD_LOGIC_VECTOR (5 downto 0);
    signal center_x_reg_707 : STD_LOGIC_VECTOR (7 downto 0);
    signal center_y_phi_fu_722_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal channel_out2_mid2_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_1_fu_1131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_0_1_fu_1146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_0_2_fu_1187_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_1_fu_1200_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_1_1_fu_1242_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal tmp_16_0_1_2_fu_1256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_2_fu_1281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal tmp_16_0_2_1_fu_1295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_0_2_2_fu_1342_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal tmp_16_1_fu_1347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_1_0_1_fu_1368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_16_1_0_2_fu_1378_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_1_1_fu_1400_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal tmp_16_1_1_1_fu_1409_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_1_1_2_fu_1431_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal tmp_16_1_2_fu_1436_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_1_2_1_fu_1482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal tmp_16_1_2_2_fu_1492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_2_fu_1520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal tmp_16_2_0_1_fu_1529_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_2_0_2_fu_1551_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal tmp_16_2_1_fu_1556_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_2_1_1_fu_1593_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal tmp_16_2_1_2_fu_1603_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_2_2_fu_1620_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal tmp_16_2_2_1_fu_1629_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_16_2_2_2_fu_1656_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal A_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal A_Addr_B_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_0_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_1_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_2_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_3_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_4_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_5_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_6_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_7_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_8_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_9_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_10_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_11_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_12_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_13_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_14_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_15_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_16_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_17_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_18_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_19_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_20_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_21_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_22_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_23_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_24_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_25_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal B_26_Addr_A_orig : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal channel_out_s_fu_755_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal center_x_mid2_fu_747_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl_fu_808_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl1_fu_820_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl12_cast_fu_816_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_cast_fu_828_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl12_0_1_fu_844_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl13_0_1_fu_856_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl12_0_1_cast_fu_852_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_0_1_cast_fu_864_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_0_2_fu_874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_shl12_0_2_fu_880_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_shl13_0_2_fu_892_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_shl12_0_2_cast_fu_888_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_0_2_cast_fu_900_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal center_x_cast_fu_804_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_11_1_fu_910_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl13_1_fu_924_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl12_1_fu_916_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_1_cast_fu_932_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_1_1_fu_942_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl13_1_1_fu_956_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl12_1_1_fu_948_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_1_1_cast_fu_964_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_11_1_2_fu_974_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_shl13_1_2_fu_988_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal p_shl12_1_2_fu_980_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal p_shl13_1_2_cast_fu_996_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal center_x_cast1_fu_800_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_11_2_fu_1006_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl13_2_fu_1020_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl12_2_fu_1012_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl13_2_cast_fu_1028_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_11_2_1_fu_1038_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl13_2_1_fu_1052_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl12_2_1_fu_1044_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl13_2_1_cast_fu_1060_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_11_2_2_fu_1070_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl13_2_2_fu_1084_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_shl12_2_2_fu_1076_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_shl13_2_2_cast_fu_1092_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_0_cast_fu_1127_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_0_1_fu_1136_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_0_1_c_fu_1142_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal center_y_cast_fu_1114_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_4_fu_1166_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_1_fu_1172_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_1_fu_1172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_0_2_fu_1178_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_0_2_c_fu_1183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_1_cas_fu_1196_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_2_fu_1221_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_2_fu_1221_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_fu_1227_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_fu_1227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_1_1_fu_1233_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_1_1_c_fu_1238_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_1_2_fu_1247_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_1_2_c_fu_1252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_0_2_fu_1221_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_1_fu_1266_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_1_fu_1266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_2_fu_1272_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_2_fu_1272_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_2_cas_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_2_1_fu_1286_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_2_1_c_fu_1291_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_1_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_1_2_fu_1272_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1304_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp5_fu_1310_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp3_fu_1300_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_fu_1321_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_fu_1321_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_1_fu_1327_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_1_fu_1327_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_0_2_2_fu_1333_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_0_2_2_c_fu_1338_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_2_fu_1351_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_0_2_2_fu_1351_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_fu_1357_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_fu_1357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_1_0_1_fu_1363_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_0_2_fu_1373_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_0_2_2_fu_1351_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_1_fu_1388_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_1_fu_1388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_2_fu_1394_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_0_2_fu_1394_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_1_1_1_fu_1404_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_1_1_fu_1414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_fu_1414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_1_fu_1420_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_1_fu_1420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_1_1_2_fu_1426_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_1_1_fu_1414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp11_fu_1448_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_1444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp10_fu_1453_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp8_fu_1440_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_2_fu_1465_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_1_2_fu_1465_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_fu_1471_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_fu_1471_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_1_2_1_fu_1477_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal input_coords_1_2_2_fu_1487_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_1_1_2_fu_1465_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_fu_1471_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp12_fu_1497_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_1_fu_1508_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_1_fu_1508_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_2_fu_1514_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_1_2_2_fu_1514_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_2_0_1_fu_1524_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_2_fu_1534_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_fu_1534_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_1_fu_1540_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_1_fu_1540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_2_0_2_fu_1546_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_2_fu_1534_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_1_fu_1540_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp18_fu_1564_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp16_fu_1560_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_2_fu_1576_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_0_2_fu_1576_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_fu_1582_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_fu_1582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_2_1_1_fu_1588_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal input_coords_2_1_2_fu_1598_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_2_1_1_fu_1608_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_1_fu_1608_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_2_fu_1614_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_1_2_fu_1614_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_2_2_1_fu_1624_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_2_1_1_fu_1608_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_fu_1639_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_fu_1639_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_1_fu_1645_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_1_fu_1645_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_coords_2_2_2_fu_1651_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_18_2_2_2_fu_1661_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_2_fu_1661_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_2_2_2_fu_1661_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp24_fu_1683_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp22_fu_1679_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp23_fu_1688_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp21_fu_1675_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp20_fu_1694_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp14_fu_1671_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp13_fu_1700_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp1_fu_1667_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component macc_par_convs_CTRL_BUS_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    macc_par_convs_CTRL_BUS_s_axi_U : component macc_par_convs_CTRL_BUS_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_BUS_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_BUS_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_BUS_AWVALID,
        AWREADY => s_axi_CTRL_BUS_AWREADY,
        AWADDR => s_axi_CTRL_BUS_AWADDR,
        WVALID => s_axi_CTRL_BUS_WVALID,
        WREADY => s_axi_CTRL_BUS_WREADY,
        WDATA => s_axi_CTRL_BUS_WDATA,
        WSTRB => s_axi_CTRL_BUS_WSTRB,
        ARVALID => s_axi_CTRL_BUS_ARVALID,
        ARREADY => s_axi_CTRL_BUS_ARREADY,
        ARADDR => s_axi_CTRL_BUS_ARADDR,
        RVALID => s_axi_CTRL_BUS_RVALID,
        RREADY => s_axi_CTRL_BUS_RREADY,
        RDATA => s_axi_CTRL_BUS_RDATA,
        RRESP => s_axi_CTRL_BUS_RRESP,
        BVALID => s_axi_CTRL_BUS_BVALID,
        BREADY => s_axi_CTRL_BUS_BREADY,
        BRESP => s_axi_CTRL_BUS_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);





    C_1_sel_rd_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                C_1_sel_rd <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = C_1_ack_out) and (ap_const_logic_1 = C_1_vld_out))) then 
                                        C_1_sel_rd <= not(C_1_sel_rd);
                end if; 
            end if;
        end if;
    end process;


    C_1_sel_wr_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                C_1_sel_wr <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = C_1_vld_in) and (ap_const_logic_1 = C_1_ack_in))) then 
                                        C_1_sel_wr <= not(C_1_sel_wr);
                end if; 
            end if;
        end if;
    end process;


    C_1_state_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                C_1_state <= ap_const_lv2_0;
            else
                if ((((ap_const_logic_0 = C_1_vld_in) and (ap_const_logic_1 = C_1_ack_out) and (C_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = C_1_vld_in) and (C_1_state = ap_const_lv2_2)))) then 
                    C_1_state <= ap_const_lv2_2;
                elsif ((((ap_const_logic_1 = C_1_vld_in) and (ap_const_logic_0 = C_1_ack_out) and (C_1_state = ap_const_lv2_3)) or ((ap_const_logic_0 = C_1_ack_out) and (C_1_state = ap_const_lv2_1)))) then 
                    C_1_state <= ap_const_lv2_1;
                elsif ((((ap_const_logic_1 = C_1_vld_in) and (C_1_state = ap_const_lv2_2)) or ((ap_const_logic_1 = C_1_ack_out) and (C_1_state = ap_const_lv2_1)) or ((C_1_state = ap_const_lv2_3) and not(((ap_const_logic_1 = C_1_vld_in) and (ap_const_logic_0 = C_1_ack_out))) and not(((ap_const_logic_0 = C_1_vld_in) and (ap_const_logic_1 = C_1_ack_out)))))) then 
                    C_1_state <= ap_const_lv2_3;
                else 
                    C_1_state <= ap_const_lv2_2;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_0 = exitcond_flatten_fu_729_p2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state3 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_0 = exitcond_flatten_fu_729_p2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    center_x_reg_707_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                center_x_reg_707 <= center_x_1_reg_1732;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                center_x_reg_707 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    center_y_reg_718_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_0 = exitcond_flatten_fu_729_p2))) then 
                center_y_reg_718 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_6_reg_1912) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
                center_y_reg_718 <= center_y_1_reg_1916;
            end if; 
        end if;
    end process;

    channel_out_reg_696_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                channel_out_reg_696 <= channel_out2_mid2_v_reg_1722;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                channel_out_reg_696 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_685_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                indvar_flatten_reg_685 <= indvar_flatten_next_reg_1717;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                indvar_flatten_reg_685 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_0 = exitcond_flatten_fu_729_p2))) then
                B_0_addr_reg_1777 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_10_addr_reg_1827 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_11_addr_reg_1832 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_12_addr_reg_1837 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_13_addr_reg_1842 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_14_addr_reg_1847 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_15_addr_reg_1852 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_16_addr_reg_1857 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_17_addr_reg_1862 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_18_addr_reg_1867 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_19_addr_reg_1872 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_1_addr_reg_1782 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_20_addr_reg_1877 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_21_addr_reg_1882 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_22_addr_reg_1887 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_23_addr_reg_1892 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_24_addr_reg_1897 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_25_addr_reg_1902 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_26_addr_reg_1907 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_2_addr_reg_1787 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_3_addr_reg_1792 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_4_addr_reg_1797 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_5_addr_reg_1802 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_6_addr_reg_1807 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_7_addr_reg_1812 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_8_addr_reg_1817 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                B_9_addr_reg_1822 <= channel_out2_mid2_fu_769_p1(5 - 1 downto 0);
                center_x_1_reg_1732 <= center_x_1_fu_838_p2;
                channel_out2_mid2_v_reg_1722 <= channel_out2_mid2_v_fu_761_p3;
                    tmp_12_0_1_reg_1737(16 downto 5) <= tmp_12_0_1_fu_868_p2(16 downto 5);
                    tmp_12_0_2_reg_1742(16 downto 5) <= tmp_12_0_2_fu_904_p2(16 downto 5);
                    tmp_12_1_1_reg_1752(16 downto 5) <= tmp_12_1_1_fu_968_p2(16 downto 5);
                    tmp_12_1_2_reg_1757(16 downto 5) <= tmp_12_1_2_fu_1000_p2(16 downto 5);
                    tmp_12_1_reg_1747(16 downto 5) <= tmp_12_1_fu_936_p2(16 downto 5);
                    tmp_12_2_1_reg_1767(17 downto 5) <= tmp_12_2_1_fu_1064_p2(17 downto 5);
                    tmp_12_2_2_reg_1772(17 downto 5) <= tmp_12_2_2_fu_1096_p2(17 downto 5);
                    tmp_12_2_reg_1762(17 downto 5) <= tmp_12_2_fu_1032_p2(17 downto 5);
                    tmp_s_reg_1727(16 downto 5) <= tmp_s_fu_832_p2(16 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = C_1_load_A)) then
                C_1_payload_A <= result_3_2_2_2_fu_1706_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = C_1_load_B)) then
                C_1_payload_B <= result_3_2_2_2_fu_1706_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_tmp_6_reg_1912 <= tmp_6_reg_1912;
                tmp_6_reg_1912 <= tmp_6_fu_1102_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then
                center_y_1_reg_1916 <= center_y_1_fu_1108_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_6_fu_1102_p2))) then
                    center_y_cast1_reg_1921(7 downto 0) <= center_y_cast1_fu_1118_p1(7 downto 0);
                input_coords_2_1_reg_1952 <= input_coords_2_1_fu_1156_p2;
                input_coords_2_2_reg_1959 <= input_coords_2_2_fu_1161_p2;
                input_coords_2_reg_1945 <= input_coords_2_fu_1151_p2;
                input_coords_reg_1930 <= input_coords_fu_1122_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1))) then
                indvar_flatten_next_reg_1717 <= indvar_flatten_next_fu_735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0))) then
                input_coords_0_1_reg_1981 <= input_coords_0_1_fu_1192_p2;
                input_coords_0_2_reg_1992 <= input_coords_0_2_fu_1205_p2;
                input_coords_1_1_reg_2006 <= input_coords_1_1_fu_1213_p2;
                input_coords_1_2_reg_2013 <= input_coords_1_2_fu_1217_p2;
                input_coords_1_reg_1999 <= input_coords_1_fu_1209_p2;
                tmp_18_0_0_1_reg_1971 <= tmp_18_0_0_1_fu_1172_p2;
                tmp_4_reg_1966 <= tmp_4_fu_1166_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                tmp15_reg_2145 <= tmp15_fu_1503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                tmp17_reg_2180 <= tmp17_fu_1570_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then
                tmp19_reg_2220 <= tmp19_fu_1634_p2;
                tmp_18_2_1_2_reg_2205 <= tmp_18_2_1_2_fu_1614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then
                tmp2_reg_2050 <= tmp2_fu_1315_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then
                tmp4_reg_2035 <= tmp4_fu_1261_p2;
                tmp_18_0_1_reg_2020 <= tmp_18_0_1_fu_1227_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0))) then
                tmp7_reg_2130 <= tmp7_fu_1459_p2;
                tmp_18_1_1_1_reg_2115 <= tmp_18_1_1_1_fu_1420_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0))) then
                tmp9_reg_2090 <= tmp9_fu_1383_p2;
                tmp_18_1_reg_2075 <= tmp_18_1_fu_1357_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then
                tmp_18_0_2_1_reg_2060 <= tmp_18_0_2_1_fu_1327_p2;
                tmp_18_0_2_reg_2055 <= tmp_18_0_2_fu_1321_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0))) then
                tmp_18_1_0_1_reg_2095 <= tmp_18_1_0_1_fu_1388_p2;
                tmp_18_1_0_2_reg_2100 <= tmp_18_1_0_2_fu_1394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                tmp_18_1_2_1_reg_2150 <= tmp_18_1_2_1_fu_1508_p2;
                tmp_18_1_2_2_reg_2155 <= tmp_18_1_2_2_fu_1514_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then
                tmp_18_2_0_2_reg_2185 <= tmp_18_2_0_2_fu_1576_p2;
                tmp_18_2_1_reg_2190 <= tmp_18_2_1_fu_1582_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0))) then
                tmp_18_2_2_1_reg_2230 <= tmp_18_2_2_1_fu_1645_p2;
                tmp_18_2_2_reg_2225 <= tmp_18_2_2_fu_1639_p2;
            end if;
        end if;
    end process;
    tmp_s_reg_1727(4 downto 0) <= "00000";
    tmp_12_0_1_reg_1737(4 downto 0) <= "00000";
    tmp_12_0_2_reg_1742(4 downto 0) <= "00000";
    tmp_12_1_reg_1747(4 downto 0) <= "00000";
    tmp_12_1_1_reg_1752(4 downto 0) <= "00000";
    tmp_12_1_2_reg_1757(4 downto 0) <= "00000";
    tmp_12_2_reg_1762(4 downto 0) <= "00000";
    tmp_12_2_1_reg_1767(4 downto 0) <= "00000";
    tmp_12_2_2_reg_1772(4 downto 0) <= "00000";
    center_y_cast1_reg_1921(16 downto 8) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, C_1_ack_in, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, exitcond_flatten_fu_729_p2, ap_CS_fsm_state2, tmp_6_fu_1102_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_1 = exitcond_flatten_fu_729_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_0 = exitcond_flatten_fu_729_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = tmp_6_fu_1102_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_lv1_1 = tmp_6_fu_1102_p2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_block_pp0_stage1_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_block_pp0_stage4_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_block_pp0_stage8_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_Addr_A <= std_logic_vector(shift_left(unsigned(A_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    A_Addr_A_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, tmp_1_fu_1131_p1, tmp_16_0_0_2_fu_1187_p1, tmp_16_0_1_1_fu_1242_p1, ap_block_pp0_stage2, tmp_16_0_2_fu_1281_p1, ap_block_pp0_stage3, tmp_16_0_2_2_fu_1342_p1, ap_block_pp0_stage4, tmp_16_1_0_1_fu_1368_p1, ap_block_pp0_stage5, tmp_16_1_1_fu_1400_p1, ap_block_pp0_stage6, tmp_16_1_1_2_fu_1431_p1, ap_block_pp0_stage7, tmp_16_1_2_1_fu_1482_p1, ap_block_pp0_stage8, tmp_16_2_fu_1520_p1, ap_block_pp0_stage9, tmp_16_2_0_2_fu_1551_p1, ap_block_pp0_stage10, tmp_16_2_1_1_fu_1593_p1, ap_block_pp0_stage11, tmp_16_2_2_fu_1620_p1, ap_block_pp0_stage12, tmp_16_2_2_2_fu_1656_p1, ap_block_pp0_stage13)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_2_2_2_fu_1656_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_2_2_fu_1620_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_2_1_1_fu_1593_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_2_0_2_fu_1551_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_2_fu_1520_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_1_2_1_fu_1482_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_1_1_2_fu_1431_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_1_1_fu_1400_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_1_0_1_fu_1368_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_0_2_2_fu_1342_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_0_2_fu_1281_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_0_1_1_fu_1242_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_16_0_0_2_fu_1187_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
                A_Addr_A_orig <= tmp_1_fu_1131_p1(32 - 1 downto 0);
            else 
                A_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            A_Addr_A_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    A_Addr_B <= std_logic_vector(shift_left(unsigned(A_Addr_B_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));

    A_Addr_B_orig_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, tmp_16_0_0_1_fu_1146_p1, tmp_16_0_1_fu_1200_p1, ap_block_pp0_stage2, tmp_16_0_1_2_fu_1256_p1, ap_block_pp0_stage3, tmp_16_0_2_1_fu_1295_p1, ap_block_pp0_stage4, tmp_16_1_fu_1347_p1, ap_block_pp0_stage5, tmp_16_1_0_2_fu_1378_p1, ap_block_pp0_stage6, tmp_16_1_1_1_fu_1409_p1, ap_block_pp0_stage7, tmp_16_1_2_fu_1436_p1, ap_block_pp0_stage8, tmp_16_1_2_2_fu_1492_p1, ap_block_pp0_stage9, tmp_16_2_0_1_fu_1529_p1, ap_block_pp0_stage10, tmp_16_2_1_fu_1556_p1, ap_block_pp0_stage11, tmp_16_2_1_2_fu_1603_p1, ap_block_pp0_stage12, tmp_16_2_2_1_fu_1629_p1)
    begin
        if ((ap_const_logic_1 = ap_enable_reg_pp0_iter0)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_2_2_1_fu_1629_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_2_1_2_fu_1603_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_2_1_fu_1556_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_2_0_1_fu_1529_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_1_2_2_fu_1492_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_1_2_fu_1436_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_1_1_1_fu_1409_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_1_0_2_fu_1378_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_1_fu_1347_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_0_2_1_fu_1295_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_0_1_2_fu_1256_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_0_1_fu_1200_p1(32 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
                A_Addr_B_orig <= tmp_16_0_0_1_fu_1146_p1(32 - 1 downto 0);
            else 
                A_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            A_Addr_B_orig <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    A_Clk_A <= ap_clk;
    A_Clk_B <= ap_clk;
    A_Din_A <= ap_const_lv32_0;
    A_Din_B <= ap_const_lv32_0;

    A_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0)))) then 
            A_EN_A <= ap_const_logic_1;
        else 
            A_EN_A <= ap_const_logic_0;
        end if; 
    end process;


    A_EN_B_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)))) then 
            A_EN_B <= ap_const_logic_1;
        else 
            A_EN_B <= ap_const_logic_0;
        end if; 
    end process;

    A_Rst_A <= ap_rst_n_inv;
    A_Rst_B <= ap_rst_n_inv;
    A_WEN_A <= ap_const_lv4_0;
    A_WEN_B <= ap_const_lv4_0;
    B_0_Addr_A <= std_logic_vector(shift_left(unsigned(B_0_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_0_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_0_addr_reg_1777),32));
    B_0_Clk_A <= ap_clk;
    B_0_Din_A <= ap_const_lv32_0;

    B_0_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            B_0_EN_A <= ap_const_logic_1;
        else 
            B_0_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_0_Rst_A <= ap_rst_n_inv;
    B_0_WEN_A <= ap_const_lv4_0;
    B_10_Addr_A <= std_logic_vector(shift_left(unsigned(B_10_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_10_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_10_addr_reg_1827),32));
    B_10_Clk_A <= ap_clk;
    B_10_Din_A <= ap_const_lv32_0;

    B_10_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0))) then 
            B_10_EN_A <= ap_const_logic_1;
        else 
            B_10_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_10_Rst_A <= ap_rst_n_inv;
    B_10_WEN_A <= ap_const_lv4_0;
    B_11_Addr_A <= std_logic_vector(shift_left(unsigned(B_11_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_11_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_11_addr_reg_1832),32));
    B_11_Clk_A <= ap_clk;
    B_11_Din_A <= ap_const_lv32_0;

    B_11_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0))) then 
            B_11_EN_A <= ap_const_logic_1;
        else 
            B_11_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_11_Rst_A <= ap_rst_n_inv;
    B_11_WEN_A <= ap_const_lv4_0;
    B_12_Addr_A <= std_logic_vector(shift_left(unsigned(B_12_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_12_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_12_addr_reg_1837),32));
    B_12_Clk_A <= ap_clk;
    B_12_Din_A <= ap_const_lv32_0;

    B_12_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0))) then 
            B_12_EN_A <= ap_const_logic_1;
        else 
            B_12_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_12_Rst_A <= ap_rst_n_inv;
    B_12_WEN_A <= ap_const_lv4_0;
    B_13_Addr_A <= std_logic_vector(shift_left(unsigned(B_13_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_13_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_13_addr_reg_1842),32));
    B_13_Clk_A <= ap_clk;
    B_13_Din_A <= ap_const_lv32_0;

    B_13_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_block_pp0_stage6_11001 = ap_const_boolean_0))) then 
            B_13_EN_A <= ap_const_logic_1;
        else 
            B_13_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_13_Rst_A <= ap_rst_n_inv;
    B_13_WEN_A <= ap_const_lv4_0;
    B_14_Addr_A <= std_logic_vector(shift_left(unsigned(B_14_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_14_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_14_addr_reg_1847),32));
    B_14_Clk_A <= ap_clk;
    B_14_Din_A <= ap_const_lv32_0;

    B_14_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0))) then 
            B_14_EN_A <= ap_const_logic_1;
        else 
            B_14_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_14_Rst_A <= ap_rst_n_inv;
    B_14_WEN_A <= ap_const_lv4_0;
    B_15_Addr_A <= std_logic_vector(shift_left(unsigned(B_15_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_15_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_15_addr_reg_1852),32));
    B_15_Clk_A <= ap_clk;
    B_15_Din_A <= ap_const_lv32_0;

    B_15_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_block_pp0_stage7_11001 = ap_const_boolean_0))) then 
            B_15_EN_A <= ap_const_logic_1;
        else 
            B_15_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_15_Rst_A <= ap_rst_n_inv;
    B_15_WEN_A <= ap_const_lv4_0;
    B_16_Addr_A <= std_logic_vector(shift_left(unsigned(B_16_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_16_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_16_addr_reg_1857),32));
    B_16_Clk_A <= ap_clk;
    B_16_Din_A <= ap_const_lv32_0;

    B_16_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then 
            B_16_EN_A <= ap_const_logic_1;
        else 
            B_16_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_16_Rst_A <= ap_rst_n_inv;
    B_16_WEN_A <= ap_const_lv4_0;
    B_17_Addr_A <= std_logic_vector(shift_left(unsigned(B_17_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_17_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_17_addr_reg_1862),32));
    B_17_Clk_A <= ap_clk;
    B_17_Din_A <= ap_const_lv32_0;

    B_17_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then 
            B_17_EN_A <= ap_const_logic_1;
        else 
            B_17_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_17_Rst_A <= ap_rst_n_inv;
    B_17_WEN_A <= ap_const_lv4_0;
    B_18_Addr_A <= std_logic_vector(shift_left(unsigned(B_18_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_18_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_18_addr_reg_1867),32));
    B_18_Clk_A <= ap_clk;
    B_18_Din_A <= ap_const_lv32_0;

    B_18_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then 
            B_18_EN_A <= ap_const_logic_1;
        else 
            B_18_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_18_Rst_A <= ap_rst_n_inv;
    B_18_WEN_A <= ap_const_lv4_0;
    B_19_Addr_A <= std_logic_vector(shift_left(unsigned(B_19_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_19_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_19_addr_reg_1872),32));
    B_19_Clk_A <= ap_clk;
    B_19_Din_A <= ap_const_lv32_0;

    B_19_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then 
            B_19_EN_A <= ap_const_logic_1;
        else 
            B_19_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_19_Rst_A <= ap_rst_n_inv;
    B_19_WEN_A <= ap_const_lv4_0;
    B_1_Addr_A <= std_logic_vector(shift_left(unsigned(B_1_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_1_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_1_addr_reg_1782),32));
    B_1_Clk_A <= ap_clk;
    B_1_Din_A <= ap_const_lv32_0;

    B_1_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0))) then 
            B_1_EN_A <= ap_const_logic_1;
        else 
            B_1_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_1_Rst_A <= ap_rst_n_inv;
    B_1_WEN_A <= ap_const_lv4_0;
    B_20_Addr_A <= std_logic_vector(shift_left(unsigned(B_20_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_20_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_20_addr_reg_1877),32));
    B_20_Clk_A <= ap_clk;
    B_20_Din_A <= ap_const_lv32_0;

    B_20_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then 
            B_20_EN_A <= ap_const_logic_1;
        else 
            B_20_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_20_Rst_A <= ap_rst_n_inv;
    B_20_WEN_A <= ap_const_lv4_0;
    B_21_Addr_A <= std_logic_vector(shift_left(unsigned(B_21_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_21_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_21_addr_reg_1882),32));
    B_21_Clk_A <= ap_clk;
    B_21_Din_A <= ap_const_lv32_0;

    B_21_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then 
            B_21_EN_A <= ap_const_logic_1;
        else 
            B_21_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_21_Rst_A <= ap_rst_n_inv;
    B_21_WEN_A <= ap_const_lv4_0;
    B_22_Addr_A <= std_logic_vector(shift_left(unsigned(B_22_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_22_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_22_addr_reg_1887),32));
    B_22_Clk_A <= ap_clk;
    B_22_Din_A <= ap_const_lv32_0;

    B_22_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then 
            B_22_EN_A <= ap_const_logic_1;
        else 
            B_22_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_22_Rst_A <= ap_rst_n_inv;
    B_22_WEN_A <= ap_const_lv4_0;
    B_23_Addr_A <= std_logic_vector(shift_left(unsigned(B_23_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_23_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_23_addr_reg_1892),32));
    B_23_Clk_A <= ap_clk;
    B_23_Din_A <= ap_const_lv32_0;

    B_23_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then 
            B_23_EN_A <= ap_const_logic_1;
        else 
            B_23_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_23_Rst_A <= ap_rst_n_inv;
    B_23_WEN_A <= ap_const_lv4_0;
    B_24_Addr_A <= std_logic_vector(shift_left(unsigned(B_24_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_24_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_24_addr_reg_1897),32));
    B_24_Clk_A <= ap_clk;
    B_24_Din_A <= ap_const_lv32_0;

    B_24_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then 
            B_24_EN_A <= ap_const_logic_1;
        else 
            B_24_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_24_Rst_A <= ap_rst_n_inv;
    B_24_WEN_A <= ap_const_lv4_0;
    B_25_Addr_A <= std_logic_vector(shift_left(unsigned(B_25_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_25_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_25_addr_reg_1902),32));
    B_25_Clk_A <= ap_clk;
    B_25_Din_A <= ap_const_lv32_0;

    B_25_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then 
            B_25_EN_A <= ap_const_logic_1;
        else 
            B_25_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_25_Rst_A <= ap_rst_n_inv;
    B_25_WEN_A <= ap_const_lv4_0;
    B_26_Addr_A <= std_logic_vector(shift_left(unsigned(B_26_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_26_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_26_addr_reg_1907),32));
    B_26_Clk_A <= ap_clk;
    B_26_Din_A <= ap_const_lv32_0;

    B_26_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0))) then 
            B_26_EN_A <= ap_const_logic_1;
        else 
            B_26_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_26_Rst_A <= ap_rst_n_inv;
    B_26_WEN_A <= ap_const_lv4_0;
    B_2_Addr_A <= std_logic_vector(shift_left(unsigned(B_2_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_2_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_2_addr_reg_1787),32));
    B_2_Clk_A <= ap_clk;
    B_2_Din_A <= ap_const_lv32_0;

    B_2_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0))) then 
            B_2_EN_A <= ap_const_logic_1;
        else 
            B_2_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_2_Rst_A <= ap_rst_n_inv;
    B_2_WEN_A <= ap_const_lv4_0;
    B_3_Addr_A <= std_logic_vector(shift_left(unsigned(B_3_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_3_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_3_addr_reg_1792),32));
    B_3_Clk_A <= ap_clk;
    B_3_Din_A <= ap_const_lv32_0;

    B_3_EN_A_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0))) then 
            B_3_EN_A <= ap_const_logic_1;
        else 
            B_3_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_3_Rst_A <= ap_rst_n_inv;
    B_3_WEN_A <= ap_const_lv4_0;
    B_4_Addr_A <= std_logic_vector(shift_left(unsigned(B_4_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_4_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_4_addr_reg_1797),32));
    B_4_Clk_A <= ap_clk;
    B_4_Din_A <= ap_const_lv32_0;

    B_4_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then 
            B_4_EN_A <= ap_const_logic_1;
        else 
            B_4_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_4_Rst_A <= ap_rst_n_inv;
    B_4_WEN_A <= ap_const_lv4_0;
    B_5_Addr_A <= std_logic_vector(shift_left(unsigned(B_5_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_5_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_5_addr_reg_1802),32));
    B_5_Clk_A <= ap_clk;
    B_5_Din_A <= ap_const_lv32_0;

    B_5_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0))) then 
            B_5_EN_A <= ap_const_logic_1;
        else 
            B_5_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_5_Rst_A <= ap_rst_n_inv;
    B_5_WEN_A <= ap_const_lv4_0;
    B_6_Addr_A <= std_logic_vector(shift_left(unsigned(B_6_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_6_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_6_addr_reg_1807),32));
    B_6_Clk_A <= ap_clk;
    B_6_Din_A <= ap_const_lv32_0;

    B_6_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then 
            B_6_EN_A <= ap_const_logic_1;
        else 
            B_6_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_6_Rst_A <= ap_rst_n_inv;
    B_6_WEN_A <= ap_const_lv4_0;
    B_7_Addr_A <= std_logic_vector(shift_left(unsigned(B_7_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_7_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_7_addr_reg_1812),32));
    B_7_Clk_A <= ap_clk;
    B_7_Din_A <= ap_const_lv32_0;

    B_7_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0))) then 
            B_7_EN_A <= ap_const_logic_1;
        else 
            B_7_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_7_Rst_A <= ap_rst_n_inv;
    B_7_WEN_A <= ap_const_lv4_0;
    B_8_Addr_A <= std_logic_vector(shift_left(unsigned(B_8_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_8_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_8_addr_reg_1817),32));
    B_8_Clk_A <= ap_clk;
    B_8_Din_A <= ap_const_lv32_0;

    B_8_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then 
            B_8_EN_A <= ap_const_logic_1;
        else 
            B_8_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_8_Rst_A <= ap_rst_n_inv;
    B_8_WEN_A <= ap_const_lv4_0;
    B_9_Addr_A <= std_logic_vector(shift_left(unsigned(B_9_Addr_A_orig),to_integer(unsigned('0' & ap_const_lv32_2(31-1 downto 0)))));
    B_9_Addr_A_orig <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_9_addr_reg_1822),32));
    B_9_Clk_A <= ap_clk;
    B_9_Din_A <= ap_const_lv32_0;

    B_9_EN_A_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0))) then 
            B_9_EN_A <= ap_const_logic_1;
        else 
            B_9_EN_A <= ap_const_logic_0;
        end if; 
    end process;

    B_9_Rst_A <= ap_rst_n_inv;
    B_9_WEN_A <= ap_const_lv4_0;
    C_1_ack_in <= C_1_state(1);
    C_1_ack_out <= C_TREADY;

    C_1_data_out_assign_proc : process(C_1_payload_A, C_1_payload_B, C_1_sel)
    begin
        if ((ap_const_logic_1 = C_1_sel)) then 
            C_1_data_out <= C_1_payload_B;
        else 
            C_1_data_out <= C_1_payload_A;
        end if; 
    end process;

    C_1_load_A <= (C_1_state_cmp_full and not(C_1_sel_wr));
    C_1_load_B <= (C_1_sel_wr and C_1_state_cmp_full);
    C_1_sel <= C_1_sel_rd;
    C_1_state_cmp_full <= '0' when (C_1_state = ap_const_lv2_1) else '1';

    C_1_vld_in_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, tmp_6_reg_1912, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = tmp_6_reg_1912) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
            C_1_vld_in <= ap_const_logic_1;
        else 
            C_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    C_1_vld_out <= C_1_state(0);
    C_TDATA <= C_1_data_out;

    C_TDATA_blk_n_assign_proc : process(C_1_state, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_6_reg_1912, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_reg_pp0_iter1_tmp_6_reg_1912)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_6_reg_1912)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1 = ap_const_boolean_0) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_6_reg_1912)))) then 
            C_TDATA_blk_n <= C_1_state(1);
        else 
            C_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    C_TVALID <= C_1_state(0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(11);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state19 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state17_io)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state17_io));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state17_io)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state17_io));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage12_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state18_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state18_io));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state18_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_boolean_1 = ap_block_state18_io));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage9_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage8_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage9_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage10_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage12_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_io_assign_proc : process(C_1_ack_in, tmp_6_reg_1912)
    begin
                ap_block_state17_io <= ((ap_const_lv1_0 = tmp_6_reg_1912) and (ap_const_logic_0 = C_1_ack_in));
    end process;

        ap_block_state17_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_io_assign_proc : process(C_1_ack_in, ap_reg_pp0_iter1_tmp_6_reg_1912)
    begin
                ap_block_state18_io <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_6_reg_1912) and (ap_const_logic_0 = C_1_ack_in));
    end process;

        ap_block_state18_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state3_assign_proc : process(tmp_6_fu_1102_p2)
    begin
        if ((ap_const_lv1_1 = tmp_6_fu_1102_p2)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(C_1_ack_in, exitcond_flatten_fu_729_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_1 = exitcond_flatten_fu_729_p2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(C_1_ack_in, exitcond_flatten_fu_729_p2, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (C_1_ack_in = ap_const_logic_1) and (ap_const_lv1_1 = exitcond_flatten_fu_729_p2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    center_x_1_fu_838_p2 <= std_logic_vector(unsigned(center_x_mid2_fu_747_p3) + unsigned(ap_const_lv8_1));
    center_x_cast1_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(center_x_mid2_fu_747_p3),10));
    center_x_cast_fu_804_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(center_x_mid2_fu_747_p3),9));
    center_x_mid2_fu_747_p3 <= 
        ap_const_lv8_0 when (tmp_3_fu_741_p2(0) = '1') else 
        center_x_reg_707;
    center_y_1_fu_1108_p2 <= std_logic_vector(unsigned(center_y_phi_fu_722_p4) + unsigned(ap_const_lv8_1));
    center_y_cast1_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(center_y_phi_fu_722_p4),17));
    center_y_cast_fu_1114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(center_y_phi_fu_722_p4),18));

    center_y_phi_fu_722_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, tmp_6_reg_1912, center_y_reg_718, center_y_1_reg_1916)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_6_reg_1912))) then 
            center_y_phi_fu_722_p4 <= center_y_1_reg_1916;
        else 
            center_y_phi_fu_722_p4 <= center_y_reg_718;
        end if; 
    end process;

    channel_out2_mid2_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(channel_out2_mid2_v_fu_761_p3),64));
    channel_out2_mid2_v_fu_761_p3 <= 
        channel_out_s_fu_755_p2 when (tmp_3_fu_741_p2(0) = '1') else 
        channel_out_reg_696;
    channel_out_s_fu_755_p2 <= std_logic_vector(unsigned(channel_out_reg_696) + unsigned(ap_const_lv6_1));
    exitcond_flatten_fu_729_p2 <= "1" when (indvar_flatten_reg_685 = ap_const_lv13_1BC0) else "0";
    indvar_flatten_next_fu_735_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_685) + unsigned(ap_const_lv13_1));
        input_coords_0_0_1_c_fu_1142_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_0_1_fu_1136_p2),32));

    input_coords_0_0_1_fu_1136_p2 <= std_logic_vector(unsigned(input_coords_fu_1122_p2) + unsigned(ap_const_lv17_1));
        input_coords_0_0_2_c_fu_1183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_0_2_fu_1178_p2),32));

    input_coords_0_0_2_fu_1178_p2 <= std_logic_vector(unsigned(input_coords_reg_1930) + unsigned(ap_const_lv17_2));
        input_coords_0_1_1_c_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_1_1_fu_1233_p2),32));

    input_coords_0_1_1_fu_1233_p2 <= std_logic_vector(unsigned(input_coords_0_1_reg_1981) + unsigned(ap_const_lv17_1));
        input_coords_0_1_2_c_fu_1252_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_1_2_fu_1247_p2),32));

    input_coords_0_1_2_fu_1247_p2 <= std_logic_vector(unsigned(input_coords_0_1_reg_1981) + unsigned(ap_const_lv17_2));
        input_coords_0_1_cas_fu_1196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_1_fu_1192_p2),32));

    input_coords_0_1_fu_1192_p2 <= std_logic_vector(unsigned(tmp_12_0_1_reg_1737) + unsigned(center_y_cast1_reg_1921));
        input_coords_0_2_1_c_fu_1291_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_2_1_fu_1286_p2),32));

    input_coords_0_2_1_fu_1286_p2 <= std_logic_vector(unsigned(input_coords_0_2_reg_1992) + unsigned(ap_const_lv17_1));
        input_coords_0_2_2_c_fu_1338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_2_2_fu_1333_p2),32));

    input_coords_0_2_2_fu_1333_p2 <= std_logic_vector(unsigned(input_coords_0_2_reg_1992) + unsigned(ap_const_lv17_2));
        input_coords_0_2_cas_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_0_2_reg_1992),32));

    input_coords_0_2_fu_1205_p2 <= std_logic_vector(unsigned(tmp_12_0_2_reg_1742) + unsigned(center_y_cast1_reg_1921));
        input_coords_0_cast_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_coords_fu_1122_p2),32));

    input_coords_1_0_1_fu_1363_p2 <= std_logic_vector(unsigned(input_coords_1_reg_1999) + unsigned(ap_const_lv17_1));
    input_coords_1_0_2_fu_1373_p2 <= std_logic_vector(unsigned(input_coords_1_reg_1999) + unsigned(ap_const_lv17_2));
    input_coords_1_1_1_fu_1404_p2 <= std_logic_vector(unsigned(input_coords_1_1_reg_2006) + unsigned(ap_const_lv17_1));
    input_coords_1_1_2_fu_1426_p2 <= std_logic_vector(unsigned(input_coords_1_1_reg_2006) + unsigned(ap_const_lv17_2));
    input_coords_1_1_fu_1213_p2 <= std_logic_vector(unsigned(tmp_12_1_1_reg_1752) + unsigned(center_y_cast1_reg_1921));
    input_coords_1_2_1_fu_1477_p2 <= std_logic_vector(unsigned(input_coords_1_2_reg_2013) + unsigned(ap_const_lv17_1));
    input_coords_1_2_2_fu_1487_p2 <= std_logic_vector(unsigned(input_coords_1_2_reg_2013) + unsigned(ap_const_lv17_2));
    input_coords_1_2_fu_1217_p2 <= std_logic_vector(unsigned(tmp_12_1_2_reg_1757) + unsigned(center_y_cast1_reg_1921));
    input_coords_1_fu_1209_p2 <= std_logic_vector(unsigned(tmp_12_1_reg_1747) + unsigned(center_y_cast1_reg_1921));
    input_coords_2_0_1_fu_1524_p2 <= std_logic_vector(unsigned(input_coords_2_reg_1945) + unsigned(ap_const_lv18_1));
    input_coords_2_0_2_fu_1546_p2 <= std_logic_vector(unsigned(input_coords_2_reg_1945) + unsigned(ap_const_lv18_2));
    input_coords_2_1_1_fu_1588_p2 <= std_logic_vector(unsigned(input_coords_2_1_reg_1952) + unsigned(ap_const_lv18_1));
    input_coords_2_1_2_fu_1598_p2 <= std_logic_vector(unsigned(input_coords_2_1_reg_1952) + unsigned(ap_const_lv18_2));
    input_coords_2_1_fu_1156_p2 <= std_logic_vector(unsigned(tmp_12_2_1_reg_1767) + unsigned(center_y_cast_fu_1114_p1));
    input_coords_2_2_1_fu_1624_p2 <= std_logic_vector(unsigned(input_coords_2_2_reg_1959) + unsigned(ap_const_lv18_1));
    input_coords_2_2_2_fu_1651_p2 <= std_logic_vector(unsigned(input_coords_2_2_reg_1959) + unsigned(ap_const_lv18_2));
    input_coords_2_2_fu_1161_p2 <= std_logic_vector(unsigned(tmp_12_2_2_reg_1772) + unsigned(center_y_cast_fu_1114_p1));
    input_coords_2_fu_1151_p2 <= std_logic_vector(unsigned(tmp_12_2_reg_1762) + unsigned(center_y_cast_fu_1114_p1));
    input_coords_fu_1122_p2 <= std_logic_vector(unsigned(tmp_s_reg_1727) + unsigned(center_y_cast1_fu_1118_p1));
    p_shl12_0_1_cast_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_0_1_fu_844_p3),17));
    p_shl12_0_1_fu_844_p3 <= (center_x_1_fu_838_p2 & ap_const_lv8_0);
    p_shl12_0_2_cast_fu_888_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl12_0_2_fu_880_p3),17));
    p_shl12_0_2_fu_880_p3 <= (tmp_11_0_2_fu_874_p2 & ap_const_lv8_0);
    p_shl12_1_1_fu_948_p3 <= (tmp_11_1_1_fu_942_p2 & ap_const_lv8_0);
    p_shl12_1_2_fu_980_p3 <= (tmp_11_1_2_fu_974_p2 & ap_const_lv8_0);
    p_shl12_1_fu_916_p3 <= (tmp_11_1_fu_910_p2 & ap_const_lv8_0);
    p_shl12_2_1_fu_1044_p3 <= (tmp_11_2_1_fu_1038_p2 & ap_const_lv8_0);
    p_shl12_2_2_fu_1076_p3 <= (tmp_11_2_2_fu_1070_p2 & ap_const_lv8_0);
    p_shl12_2_fu_1012_p3 <= (tmp_11_2_fu_1006_p2 & ap_const_lv8_0);
    p_shl12_cast_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl_fu_808_p3),17));
    p_shl13_0_1_cast_fu_864_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_0_1_fu_856_p3),17));
    p_shl13_0_1_fu_856_p3 <= (center_x_1_fu_838_p2 & ap_const_lv5_0);
    p_shl13_0_2_cast_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_0_2_fu_892_p3),17));
    p_shl13_0_2_fu_892_p3 <= (tmp_11_0_2_fu_874_p2 & ap_const_lv5_0);
    p_shl13_1_1_cast_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_1_1_fu_956_p3),17));
    p_shl13_1_1_fu_956_p3 <= (tmp_11_1_1_fu_942_p2 & ap_const_lv5_0);
    p_shl13_1_2_cast_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_1_2_fu_988_p3),17));
    p_shl13_1_2_fu_988_p3 <= (tmp_11_1_2_fu_974_p2 & ap_const_lv5_0);
    p_shl13_1_cast_fu_932_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_1_fu_924_p3),17));
    p_shl13_1_fu_924_p3 <= (tmp_11_1_fu_910_p2 & ap_const_lv5_0);
    p_shl13_2_1_cast_fu_1060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_2_1_fu_1052_p3),18));
    p_shl13_2_1_fu_1052_p3 <= (tmp_11_2_1_fu_1038_p2 & ap_const_lv5_0);
    p_shl13_2_2_cast_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_2_2_fu_1084_p3),18));
    p_shl13_2_2_fu_1084_p3 <= (tmp_11_2_2_fu_1070_p2 & ap_const_lv5_0);
    p_shl13_2_cast_fu_1028_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl13_2_fu_1020_p3),18));
    p_shl13_2_fu_1020_p3 <= (tmp_11_2_fu_1006_p2 & ap_const_lv5_0);
    p_shl13_cast_fu_828_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_820_p3),17));
    p_shl1_fu_820_p3 <= (center_x_mid2_fu_747_p3 & ap_const_lv5_0);
    p_shl_fu_808_p3 <= (center_x_mid2_fu_747_p3 & ap_const_lv8_0);
    result_3_2_2_2_fu_1706_p2 <= std_logic_vector(unsigned(tmp13_fu_1700_p2) + unsigned(tmp1_fu_1667_p2));
    tmp10_fu_1453_p2 <= std_logic_vector(unsigned(tmp11_fu_1448_p2) + unsigned(tmp_fu_1444_p2));
    tmp11_fu_1448_p2 <= std_logic_vector(unsigned(tmp_18_1_0_2_reg_2100) + unsigned(tmp_18_1_1_fu_1414_p2));
    tmp12_fu_1497_p2 <= std_logic_vector(unsigned(tmp_18_1_1_2_fu_1465_p2) + unsigned(tmp_18_1_2_fu_1471_p2));
    tmp13_fu_1700_p2 <= std_logic_vector(unsigned(tmp20_fu_1694_p2) + unsigned(tmp14_fu_1671_p2));
    tmp14_fu_1671_p2 <= std_logic_vector(unsigned(tmp17_reg_2180) + unsigned(tmp15_reg_2145));
    tmp15_fu_1503_p2 <= std_logic_vector(unsigned(tmp12_fu_1497_p2) + unsigned(tmp_18_1_1_1_reg_2115));
    tmp16_fu_1560_p2 <= std_logic_vector(unsigned(tmp_18_1_2_1_reg_2150) + unsigned(tmp_18_1_2_2_reg_2155));
    tmp17_fu_1570_p2 <= std_logic_vector(unsigned(tmp18_fu_1564_p2) + unsigned(tmp16_fu_1560_p2));
    tmp18_fu_1564_p2 <= std_logic_vector(unsigned(tmp_18_2_fu_1534_p2) + unsigned(tmp_18_2_0_1_fu_1540_p2));
    tmp19_fu_1634_p2 <= std_logic_vector(unsigned(tmp_18_2_1_reg_2190) + unsigned(tmp_18_2_1_1_fu_1608_p2));
    tmp1_fu_1667_p2 <= std_logic_vector(unsigned(tmp7_reg_2130) + unsigned(tmp2_reg_2050));
    tmp20_fu_1694_p2 <= std_logic_vector(unsigned(tmp23_fu_1688_p2) + unsigned(tmp21_fu_1675_p2));
    tmp21_fu_1675_p2 <= std_logic_vector(unsigned(tmp19_reg_2220) + unsigned(tmp_18_2_0_2_reg_2185));
    tmp22_fu_1679_p2 <= std_logic_vector(unsigned(tmp_18_2_1_2_reg_2205) + unsigned(tmp_18_2_2_reg_2225));
    tmp23_fu_1688_p2 <= std_logic_vector(unsigned(tmp24_fu_1683_p2) + unsigned(tmp22_fu_1679_p2));
    tmp24_fu_1683_p2 <= std_logic_vector(unsigned(tmp_18_2_2_1_reg_2230) + unsigned(tmp_18_2_2_2_fu_1661_p2));
    tmp2_fu_1315_p2 <= std_logic_vector(unsigned(tmp5_fu_1310_p2) + unsigned(tmp3_fu_1300_p2));
    tmp3_fu_1300_p2 <= std_logic_vector(unsigned(tmp4_reg_2035) + unsigned(tmp_18_0_0_1_reg_1971));
    tmp4_fu_1261_p2 <= std_logic_vector(unsigned(tmp_4_reg_1966) + unsigned(tmp_18_0_0_2_fu_1221_p2));
    tmp5_fu_1310_p2 <= std_logic_vector(unsigned(tmp6_fu_1304_p2) + unsigned(tmp_18_0_1_reg_2020));
    tmp6_fu_1304_p2 <= std_logic_vector(unsigned(tmp_18_0_1_1_fu_1266_p2) + unsigned(tmp_18_0_1_2_fu_1272_p2));
    tmp7_fu_1459_p2 <= std_logic_vector(unsigned(tmp10_fu_1453_p2) + unsigned(tmp8_fu_1440_p2));
    tmp8_fu_1440_p2 <= std_logic_vector(unsigned(tmp9_reg_2090) + unsigned(tmp_18_0_2_reg_2055));
    tmp9_fu_1383_p2 <= std_logic_vector(unsigned(tmp_18_0_2_1_reg_2060) + unsigned(tmp_18_0_2_2_fu_1351_p2));
    tmp_11_0_2_fu_874_p2 <= std_logic_vector(unsigned(center_x_mid2_fu_747_p3) + unsigned(ap_const_lv8_2));
    tmp_11_1_1_fu_942_p2 <= std_logic_vector(unsigned(center_x_cast_fu_804_p1) + unsigned(ap_const_lv9_E1));
    tmp_11_1_2_fu_974_p2 <= std_logic_vector(unsigned(center_x_cast_fu_804_p1) + unsigned(ap_const_lv9_E2));
    tmp_11_1_fu_910_p2 <= std_logic_vector(unsigned(center_x_cast_fu_804_p1) + unsigned(ap_const_lv9_E0));
    tmp_11_2_1_fu_1038_p2 <= std_logic_vector(unsigned(center_x_cast1_fu_800_p1) + unsigned(ap_const_lv10_1C1));
    tmp_11_2_2_fu_1070_p2 <= std_logic_vector(unsigned(center_x_cast1_fu_800_p1) + unsigned(ap_const_lv10_1C2));
    tmp_11_2_fu_1006_p2 <= std_logic_vector(unsigned(center_x_cast1_fu_800_p1) + unsigned(ap_const_lv10_1C0));
    tmp_12_0_1_fu_868_p2 <= std_logic_vector(unsigned(p_shl12_0_1_cast_fu_852_p1) - unsigned(p_shl13_0_1_cast_fu_864_p1));
    tmp_12_0_2_fu_904_p2 <= std_logic_vector(unsigned(p_shl12_0_2_cast_fu_888_p1) - unsigned(p_shl13_0_2_cast_fu_900_p1));
    tmp_12_1_1_fu_968_p2 <= std_logic_vector(unsigned(p_shl12_1_1_fu_948_p3) - unsigned(p_shl13_1_1_cast_fu_964_p1));
    tmp_12_1_2_fu_1000_p2 <= std_logic_vector(unsigned(p_shl12_1_2_fu_980_p3) - unsigned(p_shl13_1_2_cast_fu_996_p1));
    tmp_12_1_fu_936_p2 <= std_logic_vector(unsigned(p_shl12_1_fu_916_p3) - unsigned(p_shl13_1_cast_fu_932_p1));
    tmp_12_2_1_fu_1064_p2 <= std_logic_vector(unsigned(p_shl12_2_1_fu_1044_p3) - unsigned(p_shl13_2_1_cast_fu_1060_p1));
    tmp_12_2_2_fu_1096_p2 <= std_logic_vector(unsigned(p_shl12_2_2_fu_1076_p3) - unsigned(p_shl13_2_2_cast_fu_1092_p1));
    tmp_12_2_fu_1032_p2 <= std_logic_vector(unsigned(p_shl12_2_fu_1012_p3) - unsigned(p_shl13_2_cast_fu_1028_p1));
    tmp_16_0_0_1_fu_1146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_0_1_c_fu_1142_p1),64));
    tmp_16_0_0_2_fu_1187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_0_2_c_fu_1183_p1),64));
    tmp_16_0_1_1_fu_1242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_1_1_c_fu_1238_p1),64));
    tmp_16_0_1_2_fu_1256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_1_2_c_fu_1252_p1),64));
    tmp_16_0_1_fu_1200_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_1_cas_fu_1196_p1),64));
    tmp_16_0_2_1_fu_1295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_2_1_c_fu_1291_p1),64));
    tmp_16_0_2_2_fu_1342_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_2_2_c_fu_1338_p1),64));
    tmp_16_0_2_fu_1281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_2_cas_fu_1278_p1),64));
    tmp_16_1_0_1_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_0_1_fu_1363_p2),64));
    tmp_16_1_0_2_fu_1378_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_0_2_fu_1373_p2),64));
    tmp_16_1_1_1_fu_1409_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_1_1_fu_1404_p2),64));
    tmp_16_1_1_2_fu_1431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_1_2_fu_1426_p2),64));
    tmp_16_1_1_fu_1400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_1_reg_2006),64));
    tmp_16_1_2_1_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_2_1_fu_1477_p2),64));
    tmp_16_1_2_2_fu_1492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_2_2_fu_1487_p2),64));
    tmp_16_1_2_fu_1436_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_2_reg_2013),64));
    tmp_16_1_fu_1347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_1_reg_1999),64));
    tmp_16_2_0_1_fu_1529_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_0_1_fu_1524_p2),64));
    tmp_16_2_0_2_fu_1551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_0_2_fu_1546_p2),64));
    tmp_16_2_1_1_fu_1593_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_1_1_fu_1588_p2),64));
    tmp_16_2_1_2_fu_1603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_1_2_fu_1598_p2),64));
    tmp_16_2_1_fu_1556_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_1_reg_1952),64));
    tmp_16_2_2_1_fu_1629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_2_1_fu_1624_p2),64));
    tmp_16_2_2_2_fu_1656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_2_2_fu_1651_p2),64));
    tmp_16_2_2_fu_1620_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_2_reg_1959),64));
    tmp_16_2_fu_1520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_2_reg_1945),64));
    tmp_18_0_0_1_fu_1172_p0 <= B_1_Dout_A;
    tmp_18_0_0_1_fu_1172_p1 <= A_Dout_B;
    tmp_18_0_0_1_fu_1172_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_0_1_fu_1172_p0) * signed(tmp_18_0_0_1_fu_1172_p1))), 32));
    tmp_18_0_0_2_fu_1221_p0 <= B_2_Dout_A;
    tmp_18_0_0_2_fu_1221_p1 <= A_Dout_A;
    tmp_18_0_0_2_fu_1221_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_0_2_fu_1221_p0) * signed(tmp_18_0_0_2_fu_1221_p1))), 32));
    tmp_18_0_1_1_fu_1266_p0 <= B_4_Dout_A;
    tmp_18_0_1_1_fu_1266_p1 <= A_Dout_A;
    tmp_18_0_1_1_fu_1266_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_1_1_fu_1266_p0) * signed(tmp_18_0_1_1_fu_1266_p1))), 32));
    tmp_18_0_1_2_fu_1272_p0 <= B_5_Dout_A;
    tmp_18_0_1_2_fu_1272_p1 <= A_Dout_B;
    tmp_18_0_1_2_fu_1272_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_1_2_fu_1272_p0) * signed(tmp_18_0_1_2_fu_1272_p1))), 32));
    tmp_18_0_1_fu_1227_p0 <= B_3_Dout_A;
    tmp_18_0_1_fu_1227_p1 <= A_Dout_B;
    tmp_18_0_1_fu_1227_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_1_fu_1227_p0) * signed(tmp_18_0_1_fu_1227_p1))), 32));
    tmp_18_0_2_1_fu_1327_p0 <= B_7_Dout_A;
    tmp_18_0_2_1_fu_1327_p1 <= A_Dout_B;
    tmp_18_0_2_1_fu_1327_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_2_1_fu_1327_p0) * signed(tmp_18_0_2_1_fu_1327_p1))), 32));
    tmp_18_0_2_2_fu_1351_p0 <= B_8_Dout_A;
    tmp_18_0_2_2_fu_1351_p1 <= A_Dout_A;
    tmp_18_0_2_2_fu_1351_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_2_2_fu_1351_p0) * signed(tmp_18_0_2_2_fu_1351_p1))), 32));
    tmp_18_0_2_fu_1321_p0 <= B_6_Dout_A;
    tmp_18_0_2_fu_1321_p1 <= A_Dout_A;
    tmp_18_0_2_fu_1321_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_0_2_fu_1321_p0) * signed(tmp_18_0_2_fu_1321_p1))), 32));
    tmp_18_1_0_1_fu_1388_p0 <= B_10_Dout_A;
    tmp_18_1_0_1_fu_1388_p1 <= A_Dout_A;
    tmp_18_1_0_1_fu_1388_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_0_1_fu_1388_p0) * signed(tmp_18_1_0_1_fu_1388_p1))), 32));
    tmp_18_1_0_2_fu_1394_p0 <= B_11_Dout_A;
    tmp_18_1_0_2_fu_1394_p1 <= A_Dout_B;
    tmp_18_1_0_2_fu_1394_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_0_2_fu_1394_p0) * signed(tmp_18_1_0_2_fu_1394_p1))), 32));
    tmp_18_1_1_1_fu_1420_p0 <= B_13_Dout_A;
    tmp_18_1_1_1_fu_1420_p1 <= A_Dout_B;
    tmp_18_1_1_1_fu_1420_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_1_1_fu_1420_p0) * signed(tmp_18_1_1_1_fu_1420_p1))), 32));
    tmp_18_1_1_2_fu_1465_p0 <= B_14_Dout_A;
    tmp_18_1_1_2_fu_1465_p1 <= A_Dout_A;
    tmp_18_1_1_2_fu_1465_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_1_2_fu_1465_p0) * signed(tmp_18_1_1_2_fu_1465_p1))), 32));
    tmp_18_1_1_fu_1414_p0 <= B_12_Dout_A;
    tmp_18_1_1_fu_1414_p1 <= A_Dout_A;
    tmp_18_1_1_fu_1414_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_1_fu_1414_p0) * signed(tmp_18_1_1_fu_1414_p1))), 32));
    tmp_18_1_2_1_fu_1508_p0 <= B_16_Dout_A;
    tmp_18_1_2_1_fu_1508_p1 <= A_Dout_A;
    tmp_18_1_2_1_fu_1508_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_2_1_fu_1508_p0) * signed(tmp_18_1_2_1_fu_1508_p1))), 32));
    tmp_18_1_2_2_fu_1514_p0 <= B_17_Dout_A;
    tmp_18_1_2_2_fu_1514_p1 <= A_Dout_B;
    tmp_18_1_2_2_fu_1514_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_2_2_fu_1514_p0) * signed(tmp_18_1_2_2_fu_1514_p1))), 32));
    tmp_18_1_2_fu_1471_p0 <= B_15_Dout_A;
    tmp_18_1_2_fu_1471_p1 <= A_Dout_B;
    tmp_18_1_2_fu_1471_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_2_fu_1471_p0) * signed(tmp_18_1_2_fu_1471_p1))), 32));
    tmp_18_1_fu_1357_p0 <= B_9_Dout_A;
    tmp_18_1_fu_1357_p1 <= A_Dout_B;
    tmp_18_1_fu_1357_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_1_fu_1357_p0) * signed(tmp_18_1_fu_1357_p1))), 32));
    tmp_18_2_0_1_fu_1540_p0 <= B_19_Dout_A;
    tmp_18_2_0_1_fu_1540_p1 <= A_Dout_B;
    tmp_18_2_0_1_fu_1540_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_0_1_fu_1540_p0) * signed(tmp_18_2_0_1_fu_1540_p1))), 32));
    tmp_18_2_0_2_fu_1576_p0 <= B_20_Dout_A;
    tmp_18_2_0_2_fu_1576_p1 <= A_Dout_A;
    tmp_18_2_0_2_fu_1576_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_0_2_fu_1576_p0) * signed(tmp_18_2_0_2_fu_1576_p1))), 32));
    tmp_18_2_1_1_fu_1608_p0 <= B_22_Dout_A;
    tmp_18_2_1_1_fu_1608_p1 <= A_Dout_A;
    tmp_18_2_1_1_fu_1608_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_1_1_fu_1608_p0) * signed(tmp_18_2_1_1_fu_1608_p1))), 32));
    tmp_18_2_1_2_fu_1614_p0 <= B_23_Dout_A;
    tmp_18_2_1_2_fu_1614_p1 <= A_Dout_B;
    tmp_18_2_1_2_fu_1614_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_1_2_fu_1614_p0) * signed(tmp_18_2_1_2_fu_1614_p1))), 32));
    tmp_18_2_1_fu_1582_p0 <= B_21_Dout_A;
    tmp_18_2_1_fu_1582_p1 <= A_Dout_B;
    tmp_18_2_1_fu_1582_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_1_fu_1582_p0) * signed(tmp_18_2_1_fu_1582_p1))), 32));
    tmp_18_2_2_1_fu_1645_p0 <= B_25_Dout_A;
    tmp_18_2_2_1_fu_1645_p1 <= A_Dout_B;
    tmp_18_2_2_1_fu_1645_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_2_1_fu_1645_p0) * signed(tmp_18_2_2_1_fu_1645_p1))), 32));
    tmp_18_2_2_2_fu_1661_p0 <= B_26_Dout_A;
    tmp_18_2_2_2_fu_1661_p1 <= A_Dout_A;
    tmp_18_2_2_2_fu_1661_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_2_2_fu_1661_p0) * signed(tmp_18_2_2_2_fu_1661_p1))), 32));
    tmp_18_2_2_fu_1639_p0 <= B_24_Dout_A;
    tmp_18_2_2_fu_1639_p1 <= A_Dout_A;
    tmp_18_2_2_fu_1639_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_2_fu_1639_p0) * signed(tmp_18_2_2_fu_1639_p1))), 32));
    tmp_18_2_fu_1534_p0 <= B_18_Dout_A;
    tmp_18_2_fu_1534_p1 <= A_Dout_A;
    tmp_18_2_fu_1534_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_18_2_fu_1534_p0) * signed(tmp_18_2_fu_1534_p1))), 32));
    tmp_1_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(input_coords_0_cast_fu_1127_p1),64));
    tmp_3_fu_741_p2 <= "1" when (center_x_reg_707 = ap_const_lv8_DE) else "0";
    tmp_4_fu_1166_p0 <= B_0_Dout_A;
    tmp_4_fu_1166_p1 <= A_Dout_A;
    tmp_4_fu_1166_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(tmp_4_fu_1166_p0) * signed(tmp_4_fu_1166_p1))), 32));
    tmp_6_fu_1102_p2 <= "1" when (center_y_phi_fu_722_p4 = ap_const_lv8_DE) else "0";
    tmp_fu_1444_p2 <= std_logic_vector(unsigned(tmp_18_1_reg_2075) + unsigned(tmp_18_1_0_1_reg_2095));
    tmp_s_fu_832_p2 <= std_logic_vector(unsigned(p_shl12_cast_fu_816_p1) - unsigned(p_shl13_cast_fu_828_p1));
end behav;
