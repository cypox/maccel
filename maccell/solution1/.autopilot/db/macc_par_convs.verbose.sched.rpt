

================================================================
== Vivado HLS Report for 'macc_par_convs'
================================================================
* Date:           Mon Oct 16 18:03:41 2017

* Version:        2017.2 (Build 1909853 on Wed Aug 23 11:51:38 MDT 2017)
* Project:        maccell
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu9eg-ffvb1156-1-i-es1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      6.41|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +----------+----------+----------+----------+---------+
    |       Latency       |       Interval      | Pipeline|
    |    min   |    max   |    min   |    max   |   Type  |
    +----------+----------+----------+----------+---------+
    |  22079899|  22079899|  22079900|  22079900|   none  |
    +----------+----------+----------+----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------+----------+----------+----------+-----------+-----------+------+----------+
        |             |       Latency       | Iteration|  Initiation Interval  | Trip |          |
        |  Loop Name  |    min   |    max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------+----------+----------+----------+-----------+-----------+------+----------+
        |- Loop 1     |  22079898|  22079898|     99459|          -|          -|   222|    no    |
        | + Loop 1.1  |     99456|     99456|        15|         14|          1|  7104|    yes   |
        +-------------+----------+----------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 14, depth = 15


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 18
* Pipeline: 1
  Pipeline-0: II = 14, D = 15, States = { 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp)
3 --> 
	18  / (exitcond_flatten)
	4  / (!exitcond_flatten)
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	3  / true
18 --> 
	2  / true
* FSM state operations: 

 <State 1>: 0.76ns
ST_1: StgValue_19 (30)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_26_V), !map !58

ST_1: StgValue_20 (31)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_25_V), !map !64

ST_1: StgValue_21 (32)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_24_V), !map !70

ST_1: StgValue_22 (33)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_23_V), !map !76

ST_1: StgValue_23 (34)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_22_V), !map !82

ST_1: StgValue_24 (35)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_21_V), !map !88

ST_1: StgValue_25 (36)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_20_V), !map !94

ST_1: StgValue_26 (37)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_19_V), !map !100

ST_1: StgValue_27 (38)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_18_V), !map !106

ST_1: StgValue_28 (39)  [1/1] 0.00ns
:9  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_17_V), !map !112

ST_1: StgValue_29 (40)  [1/1] 0.00ns
:10  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_16_V), !map !118

ST_1: StgValue_30 (41)  [1/1] 0.00ns
:11  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_15_V), !map !124

ST_1: StgValue_31 (42)  [1/1] 0.00ns
:12  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_14_V), !map !130

ST_1: StgValue_32 (43)  [1/1] 0.00ns
:13  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_13_V), !map !136

ST_1: StgValue_33 (44)  [1/1] 0.00ns
:14  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_12_V), !map !142

ST_1: StgValue_34 (45)  [1/1] 0.00ns
:15  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_11_V), !map !148

ST_1: StgValue_35 (46)  [1/1] 0.00ns
:16  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_10_V), !map !154

ST_1: StgValue_36 (47)  [1/1] 0.00ns
:17  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_9_V), !map !160

ST_1: StgValue_37 (48)  [1/1] 0.00ns
:18  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_8_V), !map !166

ST_1: StgValue_38 (49)  [1/1] 0.00ns
:19  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_7_V), !map !172

ST_1: StgValue_39 (50)  [1/1] 0.00ns
:20  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_6_V), !map !178

ST_1: StgValue_40 (51)  [1/1] 0.00ns
:21  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_5_V), !map !184

ST_1: StgValue_41 (52)  [1/1] 0.00ns
:22  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_4_V), !map !190

ST_1: StgValue_42 (53)  [1/1] 0.00ns
:23  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_3_V), !map !196

ST_1: StgValue_43 (54)  [1/1] 0.00ns
:24  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_2_V), !map !202

ST_1: StgValue_44 (55)  [1/1] 0.00ns
:25  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_1_V), !map !208

ST_1: StgValue_45 (56)  [1/1] 0.00ns
:26  call void (...)* @_ssdm_op_SpecBitsMap([32 x i8]* %B_0_V), !map !214

ST_1: StgValue_46 (57)  [1/1] 0.00ns
:27  call void (...)* @_ssdm_op_SpecBitsMap([150528 x i8]* %A_V), !map !220

ST_1: StgValue_47 (58)  [1/1] 0.00ns
:28  call void (...)* @_ssdm_op_SpecBitsMap([1577088 x i8]* %C_V), !map !226

ST_1: StgValue_48 (59)  [1/1] 0.00ns
:29  call void (...)* @_ssdm_op_SpecTopModule([15 x i8]* @macc_par_convs_str) nounwind

ST_1: StgValue_49 (60)  [1/1] 0.00ns
:30  call void (...)* @_ssdm_op_SpecInterface([150528 x i8]* %A_V, [5 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110, [1 x i8]* @p_str110, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110) nounwind

ST_1: StgValue_50 (61)  [1/1] 0.00ns
:31  call void (...)* @_ssdm_op_SpecInterface([32 x i8]* %B_0_V, [32 x i8]* %B_1_V, [32 x i8]* %B_2_V, [32 x i8]* %B_3_V, [32 x i8]* %B_4_V, [32 x i8]* %B_5_V, [32 x i8]* %B_6_V, [32 x i8]* %B_7_V, [32 x i8]* %B_8_V, [32 x i8]* %B_9_V, [32 x i8]* %B_10_V, [32 x i8]* %B_11_V, [32 x i8]* %B_12_V, [32 x i8]* %B_13_V, [32 x i8]* %B_14_V, [32 x i8]* %B_15_V, [32 x i8]* %B_16_V, [32 x i8]* %B_17_V, [32 x i8]* %B_18_V, [32 x i8]* %B_19_V, [32 x i8]* %B_20_V, [32 x i8]* %B_21_V, [32 x i8]* %B_22_V, [32 x i8]* %B_23_V, [32 x i8]* %B_24_V, [32 x i8]* %B_25_V, [32 x i8]* %B_26_V, [5 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110, [1 x i8]* @p_str110, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110) nounwind

ST_1: StgValue_51 (62)  [1/1] 0.00ns
:32  call void (...)* @_ssdm_op_SpecInterface([1577088 x i8]* %C_V, [5 x i8]* @p_str9, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110, [1 x i8]* @p_str110, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110) nounwind

ST_1: StgValue_52 (63)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:21
:33  call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str211, i32 0, i32 0, [1 x i8]* @p_str110, i32 0, i32 0, [9 x i8]* @p_str312, [1 x i8]* @p_str110, [1 x i8]* @p_str110, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str110, [1 x i8]* @p_str110) nounwind

ST_1: StgValue_53 (64)  [1/1] 0.76ns  loc: maccell/src/macc_par_convs.cpp:27
:34  br label %.loopexit


 <State 2>: 1.97ns
ST_2: shift_x (66)  [1/1] 0.00ns
.loopexit:0  %shift_x = phi i8 [ 0, %0 ], [ %center_x, %.loopexit.loopexit ]

ST_2: output_x_coords (67)  [1/1] 0.00ns
.loopexit:1  %output_x_coords = phi i16 [ 0, %0 ], [ %next_mul, %.loopexit.loopexit ]

ST_2: next_mul (68)  [1/1] 1.02ns
.loopexit:2  %next_mul = add i16 %output_x_coords, 222

ST_2: tmp (69)  [1/1] 0.86ns  loc: maccell/src/macc_par_convs.cpp:27
.loopexit:3  %tmp = icmp eq i8 %shift_x, -34

ST_2: center_x (70)  [1/1] 0.91ns  loc: maccell/src/macc_par_convs.cpp:76
.loopexit:4  %center_x = add i8 %shift_x, 1

ST_2: StgValue_59 (71)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:27
.loopexit:5  br i1 %tmp, label %2, label %1

ST_2: shift_x_cast1 (73)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:27
:0  %shift_x_cast1 = zext i8 %shift_x to i10

ST_2: shift_x_cast (74)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:27
:1  %shift_x_cast = zext i8 %shift_x to i9

ST_2: empty (75)  [1/1] 0.00ns
:2  %empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 222, i64 222, i64 222)

ST_2: output_x_coords_cast (76)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:31
:3  %output_x_coords_cast = zext i16 %output_x_coords to i21

ST_2: p_shl (77)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:4  %p_shl = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %shift_x, i8 0)

ST_2: p_shl13_cast (78)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:5  %p_shl13_cast = zext i16 %p_shl to i17

ST_2: p_shl1 (79)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:6  %p_shl1 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %shift_x, i5 0)

ST_2: p_shl14_cast (80)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:7  %p_shl14_cast = zext i13 %p_shl1 to i17

ST_2: tmp_s (81)  [1/1] 1.02ns  loc: maccell/src/macc_par_convs.cpp:76
:8  %tmp_s = sub i17 %p_shl13_cast, %p_shl14_cast

ST_2: p_shl13_0_1 (82)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:9  %p_shl13_0_1 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %center_x, i8 0)

ST_2: p_shl13_0_1_cast (83)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:10  %p_shl13_0_1_cast = zext i16 %p_shl13_0_1 to i17

ST_2: p_shl14_0_1 (84)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:11  %p_shl14_0_1 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %center_x, i5 0)

ST_2: p_shl14_0_1_cast (85)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:12  %p_shl14_0_1_cast = zext i13 %p_shl14_0_1 to i17

ST_2: tmp_10_0_1 (86)  [1/1] 1.02ns  loc: maccell/src/macc_par_convs.cpp:76
:13  %tmp_10_0_1 = sub i17 %p_shl13_0_1_cast, %p_shl14_0_1_cast

ST_2: tmp_8_0_2 (87)  [1/1] 0.91ns  loc: maccell/src/macc_par_convs.cpp:76
:14  %tmp_8_0_2 = add i8 %shift_x, 2

ST_2: p_shl13_0_2 (88)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:15  %p_shl13_0_2 = call i16 @_ssdm_op_BitConcatenate.i16.i8.i8(i8 %tmp_8_0_2, i8 0)

ST_2: p_shl13_0_2_cast (89)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:16  %p_shl13_0_2_cast = zext i16 %p_shl13_0_2 to i17

ST_2: p_shl14_0_2 (90)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:17  %p_shl14_0_2 = call i13 @_ssdm_op_BitConcatenate.i13.i8.i5(i8 %tmp_8_0_2, i5 0)

ST_2: p_shl14_0_2_cast (91)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:18  %p_shl14_0_2_cast = zext i13 %p_shl14_0_2 to i17

ST_2: tmp_10_0_2 (92)  [1/1] 1.02ns  loc: maccell/src/macc_par_convs.cpp:76
:19  %tmp_10_0_2 = sub i17 %p_shl13_0_2_cast, %p_shl14_0_2_cast

ST_2: tmp_8_1 (93)  [1/1] 0.92ns  loc: maccell/src/macc_par_convs.cpp:76
:20  %tmp_8_1 = add i9 %shift_x_cast, 224

ST_2: p_shl13_1 (94)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:21  %p_shl13_1 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %tmp_8_1, i8 0)

ST_2: p_shl14_1 (95)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:22  %p_shl14_1 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_8_1, i5 0)

ST_2: p_shl14_1_cast (96)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:23  %p_shl14_1_cast = zext i14 %p_shl14_1 to i17

ST_2: tmp_10_1 (97)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:76
:24  %tmp_10_1 = sub i17 %p_shl13_1, %p_shl14_1_cast

ST_2: tmp_8_1_1 (98)  [1/1] 0.92ns  loc: maccell/src/macc_par_convs.cpp:76
:25  %tmp_8_1_1 = add i9 %shift_x_cast, 225

ST_2: p_shl13_1_1 (99)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:26  %p_shl13_1_1 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %tmp_8_1_1, i8 0)

ST_2: p_shl14_1_1 (100)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:27  %p_shl14_1_1 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_8_1_1, i5 0)

ST_2: p_shl14_1_1_cast (101)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:28  %p_shl14_1_1_cast = zext i14 %p_shl14_1_1 to i17

ST_2: tmp_10_1_1 (102)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:76
:29  %tmp_10_1_1 = sub i17 %p_shl13_1_1, %p_shl14_1_1_cast

ST_2: tmp_8_1_2 (103)  [1/1] 0.92ns  loc: maccell/src/macc_par_convs.cpp:76
:30  %tmp_8_1_2 = add i9 %shift_x_cast, 226

ST_2: p_shl13_1_2 (104)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:31  %p_shl13_1_2 = call i17 @_ssdm_op_BitConcatenate.i17.i9.i8(i9 %tmp_8_1_2, i8 0)

ST_2: p_shl14_1_2 (105)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:32  %p_shl14_1_2 = call i14 @_ssdm_op_BitConcatenate.i14.i9.i5(i9 %tmp_8_1_2, i5 0)

ST_2: p_shl14_1_2_cast (106)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:33  %p_shl14_1_2_cast = zext i14 %p_shl14_1_2 to i17

ST_2: tmp_10_1_2 (107)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:76
:34  %tmp_10_1_2 = sub i17 %p_shl13_1_2, %p_shl14_1_2_cast

ST_2: tmp_8_2 (108)  [1/1] 0.93ns  loc: maccell/src/macc_par_convs.cpp:76
:35  %tmp_8_2 = add i10 %shift_x_cast1, 448

ST_2: p_shl13_2 (109)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:36  %p_shl13_2 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %tmp_8_2, i8 0)

ST_2: p_shl14_2 (110)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:37  %p_shl14_2 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %tmp_8_2, i5 0)

ST_2: p_shl14_2_cast (111)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:38  %p_shl14_2_cast = zext i15 %p_shl14_2 to i18

ST_2: tmp_10_2 (112)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:76
:39  %tmp_10_2 = sub i18 %p_shl13_2, %p_shl14_2_cast

ST_2: tmp_8_2_1 (113)  [1/1] 0.93ns  loc: maccell/src/macc_par_convs.cpp:76
:40  %tmp_8_2_1 = add i10 %shift_x_cast1, 449

ST_2: p_shl13_2_1 (114)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:41  %p_shl13_2_1 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %tmp_8_2_1, i8 0)

ST_2: p_shl14_2_1 (115)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:42  %p_shl14_2_1 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %tmp_8_2_1, i5 0)

ST_2: p_shl14_2_1_cast (116)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:43  %p_shl14_2_1_cast = zext i15 %p_shl14_2_1 to i18

ST_2: tmp_10_2_1 (117)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:76
:44  %tmp_10_2_1 = sub i18 %p_shl13_2_1, %p_shl14_2_1_cast

ST_2: tmp_8_2_2 (118)  [1/1] 0.93ns  loc: maccell/src/macc_par_convs.cpp:76
:45  %tmp_8_2_2 = add i10 %shift_x_cast1, 450

ST_2: p_shl13_2_2 (119)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:46  %p_shl13_2_2 = call i18 @_ssdm_op_BitConcatenate.i18.i10.i8(i10 %tmp_8_2_2, i8 0)

ST_2: p_shl14_2_2 (120)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:47  %p_shl14_2_2 = call i15 @_ssdm_op_BitConcatenate.i15.i10.i5(i10 %tmp_8_2_2, i5 0)

ST_2: p_shl14_2_2_cast (121)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:76
:48  %p_shl14_2_2_cast = zext i15 %p_shl14_2_2 to i18

ST_2: tmp_10_2_2 (122)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:76
:49  %tmp_10_2_2 = sub i18 %p_shl13_2_2, %p_shl14_2_2_cast

ST_2: StgValue_110 (123)  [1/1] 0.76ns  loc: maccell/src/macc_par_convs.cpp:33
:50  br label %.preheader

ST_2: StgValue_111 (487)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:94
:0  ret void


 <State 3>: 5.34ns
ST_3: indvar_flatten (125)  [1/1] 0.00ns
.preheader:0  %indvar_flatten = phi i13 [ 0, %1 ], [ %indvar_flatten_next, %.preheader.preheader ]

ST_3: shift_y (126)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:36
.preheader:1  %shift_y = phi i8 [ 0, %1 ], [ %shift_y_cast6_mid2_v, %.preheader.preheader ]

ST_3: channel_out (127)  [1/1] 0.00ns
.preheader:2  %channel_out = phi i6 [ 0, %1 ], [ %channel_out_1, %.preheader.preheader ]

ST_3: exitcond_flatten (128)  [1/1] 0.86ns
.preheader:3  %exitcond_flatten = icmp eq i13 %indvar_flatten, -1088

ST_3: indvar_flatten_next (129)  [1/1] 0.98ns
.preheader:4  %indvar_flatten_next = add i13 %indvar_flatten, 1

ST_3: StgValue_117 (130)  [1/1] 0.00ns
.preheader:5  br i1 %exitcond_flatten, label %.loopexit.loopexit, label %.preheader.preheader

ST_3: tmp_3 (133)  [1/1] 0.87ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:1  %tmp_3 = icmp eq i6 %channel_out, -32

ST_3: channel_out_mid2 (134)  [1/1] 0.55ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:2  %channel_out_mid2 = select i1 %tmp_3, i6 0, i6 %channel_out

ST_3: center_y (135)  [1/1] 0.91ns  loc: maccell/src/macc_par_convs.cpp:33
.preheader.preheader:3  %center_y = add i8 %shift_y, 1

ST_3: shift_y_cast6_mid2_v (136)  [1/1] 0.55ns  loc: maccell/src/macc_par_convs.cpp:36
.preheader.preheader:4  %shift_y_cast6_mid2_v = select i1 %tmp_3, i8 %center_y, i8 %shift_y

ST_3: shift_y_cast6_mid2 (137)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:36
.preheader.preheader:5  %shift_y_cast6_mid2 = zext i8 %shift_y_cast6_mid2_v to i21

ST_3: tmp_14_mid2_v_v_v (138)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:6  %tmp_14_mid2_v_v_v = zext i8 %shift_y_cast6_mid2_v to i17

ST_3: tmp_14_mid2_v_v (139)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:7  %tmp_14_mid2_v_v = add i17 %tmp_s, %tmp_14_mid2_v_v_v

ST_3: tmp_14_mid2_v (140)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:8  %tmp_14_mid2_v = sext i17 %tmp_14_mid2_v_v to i32

ST_3: tmp_14_mid2 (141)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:9  %tmp_14_mid2 = zext i32 %tmp_14_mid2_v to i64

ST_3: tmp_14_0_0_1_mid2_v_s (142)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:10  %tmp_14_0_0_1_mid2_v_s = add i17 %tmp_14_mid2_v_v, 1

ST_3: tmp_14_0_0_1_mid2_v (143)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:11  %tmp_14_0_0_1_mid2_v = sext i17 %tmp_14_0_0_1_mid2_v_s to i32

ST_3: tmp_14_0_0_1_mid2 (144)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:12  %tmp_14_0_0_1_mid2 = zext i32 %tmp_14_0_0_1_mid2_v to i64

ST_3: tmp_14_0_1_mid2_v_v (148)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:16  %tmp_14_0_1_mid2_v_v = add i17 %tmp_10_0_1, %tmp_14_mid2_v_v_v

ST_3: tmp_14_0_2_mid2_v_v (157)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:25  %tmp_14_0_2_mid2_v_v = add i17 %tmp_10_0_2, %tmp_14_mid2_v_v_v

ST_3: tmp_14_1_mid2_v (166)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:34  %tmp_14_1_mid2_v = add i17 %tmp_10_1, %tmp_14_mid2_v_v_v

ST_3: tmp_14_1_1_mid2_v (172)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:40  %tmp_14_1_1_mid2_v = add i17 %tmp_10_1_1, %tmp_14_mid2_v_v_v

ST_3: tmp_14_1_2_mid2_v (178)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:46  %tmp_14_1_2_mid2_v = add i17 %tmp_10_1_2, %tmp_14_mid2_v_v_v

ST_3: channel_out_cast3 (203)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:44
.preheader.preheader:71  %channel_out_cast3 = zext i6 %channel_out_mid2 to i21

ST_3: tmp_5 (206)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:44
.preheader.preheader:74  %tmp_5 = mul i21 %channel_out_cast3, 49284

ST_3: tmp1 (207)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:44
.preheader.preheader:75  %tmp1 = add i21 %shift_y_cast6_mid2, %tmp_5

ST_3: output_coords (208)  [1/1] 1.07ns  loc: maccell/src/macc_par_convs.cpp:44
.preheader.preheader:76  %output_coords = add i21 %tmp1, %output_x_coords_cast

ST_3: A_V_addr (209)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:77  %A_V_addr = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_mid2

ST_3: A_V_load (210)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:78  %A_V_load = load i8* %A_V_addr, align 1

ST_3: channel_out1 (212)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:80  %channel_out1 = zext i6 %channel_out_mid2 to i64

ST_3: B_0_V_addr (213)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:81  %B_0_V_addr = getelementptr [32 x i8]* %B_0_V, i64 0, i64 %channel_out1

ST_3: B_0_V_load (214)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:82  %B_0_V_load = load i8* %B_0_V_addr, align 1

ST_3: A_V_addr_1 (217)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:85  %A_V_addr_1 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_0_1_mid2

ST_3: A_V_load_1 (218)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:86  %A_V_load_1 = load i8* %A_V_addr_1, align 1

ST_3: B_1_V_addr (220)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:88  %B_1_V_addr = getelementptr [32 x i8]* %B_1_V, i64 0, i64 %channel_out1

ST_3: B_1_V_load (221)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:89  %B_1_V_load = load i8* %B_1_V_addr, align 1

ST_3: channel_out_1 (482)  [1/1] 0.89ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:350  %channel_out_1 = add i6 %channel_out_mid2, 1


 <State 4>: 5.73ns
ST_4: tmp_14_0_0_2_mid2_v_s (145)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:13  %tmp_14_0_0_2_mid2_v_s = add i17 %tmp_14_mid2_v_v, 2

ST_4: tmp_14_0_0_2_mid2_v (146)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:14  %tmp_14_0_0_2_mid2_v = sext i17 %tmp_14_0_0_2_mid2_v_s to i32

ST_4: tmp_14_0_0_2_mid2 (147)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:15  %tmp_14_0_0_2_mid2 = zext i32 %tmp_14_0_0_2_mid2_v to i64

ST_4: tmp_14_0_1_mid2_v (149)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:17  %tmp_14_0_1_mid2_v = sext i17 %tmp_14_0_1_mid2_v_v to i32

ST_4: tmp_14_0_1_mid2 (150)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:18  %tmp_14_0_1_mid2 = zext i32 %tmp_14_0_1_mid2_v to i64

ST_4: A_V_load (210)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:78  %A_V_load = load i8* %A_V_addr, align 1

ST_4: OP1_V_0_cast (211)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:79  %OP1_V_0_cast = sext i8 %A_V_load to i12

ST_4: B_0_V_load (214)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:82  %B_0_V_load = load i8* %B_0_V_addr, align 1

ST_4: OP2_V_0_cast (215)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:83  %OP2_V_0_cast = sext i8 %B_0_V_load to i12

ST_4: p_Val2_1 (216)  [1/1] 2.17ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:84  %p_Val2_1 = mul i12 %OP2_V_0_cast, %OP1_V_0_cast

ST_4: A_V_load_1 (218)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:86  %A_V_load_1 = load i8* %A_V_addr_1, align 1

ST_4: OP1_V_0_0_1 (219)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:87  %OP1_V_0_0_1 = sext i8 %A_V_load_1 to i12

ST_4: B_1_V_load (221)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:89  %B_1_V_load = load i8* %B_1_V_addr, align 1

ST_4: OP2_V_0_0_1 (222)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:90  %OP2_V_0_0_1 = sext i8 %B_1_V_load to i12

ST_4: p_Val2_1_0_0_1 (223)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:91  %p_Val2_1_0_0_1 = mul i12 %OP2_V_0_0_1, %OP1_V_0_0_1

ST_4: tmp_1 (224)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:92  %tmp_1 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_1, i32 4, i32 11)

ST_4: tmp_17_0_0_1 (225)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:93  %tmp_17_0_0_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_1, i4 0)

ST_4: p_Val2_2_0_0_1 (226)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:94  %p_Val2_2_0_0_1 = add i12 %tmp_17_0_0_1, %p_Val2_1_0_0_1

ST_4: A_V_addr_2 (227)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:95  %A_V_addr_2 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_0_2_mid2

ST_4: A_V_load_2 (228)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:96  %A_V_load_2 = load i8* %A_V_addr_2, align 1

ST_4: B_2_V_addr (230)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:98  %B_2_V_addr = getelementptr [32 x i8]* %B_2_V, i64 0, i64 %channel_out1

ST_4: B_2_V_load (231)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:99  %B_2_V_load = load i8* %B_2_V_addr, align 1

ST_4: tmp_4 (234)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:102  %tmp_4 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_0_1, i32 4, i32 11)

ST_4: A_V_addr_3 (237)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:105  %A_V_addr_3 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_1_mid2

ST_4: A_V_load_3 (238)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:106  %A_V_load_3 = load i8* %A_V_addr_3, align 1

ST_4: B_3_V_addr (240)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:108  %B_3_V_addr = getelementptr [32 x i8]* %B_3_V, i64 0, i64 %channel_out1

ST_4: B_3_V_load (241)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:109  %B_3_V_load = load i8* %B_3_V_addr, align 1


 <State 5>: 6.41ns
ST_5: tmp_14_0_1_1_mid2_v_s (151)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:19  %tmp_14_0_1_1_mid2_v_s = add i17 %tmp_14_0_1_mid2_v_v, 1

ST_5: tmp_14_0_1_1_mid2_v (152)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:20  %tmp_14_0_1_1_mid2_v = sext i17 %tmp_14_0_1_1_mid2_v_s to i32

ST_5: tmp_14_0_1_1_mid2 (153)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:21  %tmp_14_0_1_1_mid2 = zext i32 %tmp_14_0_1_1_mid2_v to i64

ST_5: tmp_14_0_1_2_mid2_v_s (154)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:22  %tmp_14_0_1_2_mid2_v_s = add i17 %tmp_14_0_1_mid2_v_v, 2

ST_5: tmp_14_0_1_2_mid2_v (155)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:23  %tmp_14_0_1_2_mid2_v = sext i17 %tmp_14_0_1_2_mid2_v_s to i32

ST_5: tmp_14_0_1_2_mid2 (156)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:24  %tmp_14_0_1_2_mid2 = zext i32 %tmp_14_0_1_2_mid2_v to i64

ST_5: A_V_load_2 (228)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:96  %A_V_load_2 = load i8* %A_V_addr_2, align 1

ST_5: OP1_V_0_0_2 (229)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:97  %OP1_V_0_0_2 = sext i8 %A_V_load_2 to i12

ST_5: B_2_V_load (231)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:99  %B_2_V_load = load i8* %B_2_V_addr, align 1

ST_5: OP2_V_0_0_2 (232)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:100  %OP2_V_0_0_2 = sext i8 %B_2_V_load to i12

ST_5: p_Val2_1_0_0_2 (233)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:101  %p_Val2_1_0_0_2 = mul i12 %OP2_V_0_0_2, %OP1_V_0_0_2

ST_5: tmp_17_0_0_2 (235)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:103  %tmp_17_0_0_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_4, i4 0)

ST_5: p_Val2_2_0_0_2 (236)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:104  %p_Val2_2_0_0_2 = add i12 %tmp_17_0_0_2, %p_Val2_1_0_0_2

ST_5: A_V_load_3 (238)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:106  %A_V_load_3 = load i8* %A_V_addr_3, align 1

ST_5: OP1_V_0_1 (239)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:107  %OP1_V_0_1 = sext i8 %A_V_load_3 to i12

ST_5: B_3_V_load (241)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:109  %B_3_V_load = load i8* %B_3_V_addr, align 1

ST_5: OP2_V_0_1 (242)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:110  %OP2_V_0_1 = sext i8 %B_3_V_load to i12

ST_5: p_Val2_1_0_1 (243)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:111  %p_Val2_1_0_1 = mul i12 %OP2_V_0_1, %OP1_V_0_1

ST_5: tmp_6 (244)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:112  %tmp_6 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_0_2, i32 4, i32 11)

ST_5: tmp_17_0_1 (245)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:113  %tmp_17_0_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_6, i4 0)

ST_5: p_Val2_2_0_1 (246)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:114  %p_Val2_2_0_1 = add i12 %tmp_17_0_1, %p_Val2_1_0_1

ST_5: A_V_addr_4 (247)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:115  %A_V_addr_4 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_1_1_mid2

ST_5: A_V_load_4 (248)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:116  %A_V_load_4 = load i8* %A_V_addr_4, align 1

ST_5: B_4_V_addr (250)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:118  %B_4_V_addr = getelementptr [32 x i8]* %B_4_V, i64 0, i64 %channel_out1

ST_5: B_4_V_load (251)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:119  %B_4_V_load = load i8* %B_4_V_addr, align 1

ST_5: tmp_8 (254)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:122  %tmp_8 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_1, i32 4, i32 11)

ST_5: A_V_addr_5 (257)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:125  %A_V_addr_5 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_1_2_mid2

ST_5: A_V_load_5 (258)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:126  %A_V_load_5 = load i8* %A_V_addr_5, align 1

ST_5: B_5_V_addr (260)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:128  %B_5_V_addr = getelementptr [32 x i8]* %B_5_V, i64 0, i64 %channel_out1

ST_5: B_5_V_load (261)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:129  %B_5_V_load = load i8* %B_5_V_addr, align 1


 <State 6>: 6.41ns
ST_6: tmp_14_0_2_mid2_v (158)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:26  %tmp_14_0_2_mid2_v = sext i17 %tmp_14_0_2_mid2_v_v to i32

ST_6: tmp_14_0_2_mid2 (159)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:27  %tmp_14_0_2_mid2 = zext i32 %tmp_14_0_2_mid2_v to i64

ST_6: tmp_14_0_2_1_mid2_v_s (160)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:28  %tmp_14_0_2_1_mid2_v_s = add i17 %tmp_14_0_2_mid2_v_v, 1

ST_6: tmp_14_0_2_1_mid2_v (161)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:29  %tmp_14_0_2_1_mid2_v = sext i17 %tmp_14_0_2_1_mid2_v_s to i32

ST_6: tmp_14_0_2_1_mid2 (162)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:30  %tmp_14_0_2_1_mid2 = zext i32 %tmp_14_0_2_1_mid2_v to i64

ST_6: A_V_load_4 (248)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:116  %A_V_load_4 = load i8* %A_V_addr_4, align 1

ST_6: OP1_V_0_1_1 (249)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:117  %OP1_V_0_1_1 = sext i8 %A_V_load_4 to i12

ST_6: B_4_V_load (251)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:119  %B_4_V_load = load i8* %B_4_V_addr, align 1

ST_6: OP2_V_0_1_1 (252)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:120  %OP2_V_0_1_1 = sext i8 %B_4_V_load to i12

ST_6: p_Val2_1_0_1_1 (253)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:121  %p_Val2_1_0_1_1 = mul i12 %OP2_V_0_1_1, %OP1_V_0_1_1

ST_6: tmp_17_0_1_1 (255)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:123  %tmp_17_0_1_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_8, i4 0)

ST_6: p_Val2_2_0_1_1 (256)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:124  %p_Val2_2_0_1_1 = add i12 %tmp_17_0_1_1, %p_Val2_1_0_1_1

ST_6: A_V_load_5 (258)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:126  %A_V_load_5 = load i8* %A_V_addr_5, align 1

ST_6: OP1_V_0_1_2 (259)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:127  %OP1_V_0_1_2 = sext i8 %A_V_load_5 to i12

ST_6: B_5_V_load (261)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:129  %B_5_V_load = load i8* %B_5_V_addr, align 1

ST_6: OP2_V_0_1_2 (262)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:130  %OP2_V_0_1_2 = sext i8 %B_5_V_load to i12

ST_6: p_Val2_1_0_1_2 (263)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:131  %p_Val2_1_0_1_2 = mul i12 %OP2_V_0_1_2, %OP1_V_0_1_2

ST_6: tmp_9 (264)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:132  %tmp_9 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_1_1, i32 4, i32 11)

ST_6: tmp_17_0_1_2 (265)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:133  %tmp_17_0_1_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_9, i4 0)

ST_6: p_Val2_2_0_1_2 (266)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:134  %p_Val2_2_0_1_2 = add i12 %tmp_17_0_1_2, %p_Val2_1_0_1_2

ST_6: A_V_addr_6 (267)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:135  %A_V_addr_6 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_2_mid2

ST_6: A_V_load_6 (268)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:136  %A_V_load_6 = load i8* %A_V_addr_6, align 1

ST_6: B_6_V_addr (270)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:138  %B_6_V_addr = getelementptr [32 x i8]* %B_6_V, i64 0, i64 %channel_out1

ST_6: B_6_V_load (271)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:139  %B_6_V_load = load i8* %B_6_V_addr, align 1

ST_6: tmp_10 (274)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:142  %tmp_10 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_1_2, i32 4, i32 11)

ST_6: A_V_addr_7 (277)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:145  %A_V_addr_7 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_2_1_mid2

ST_6: A_V_load_7 (278)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:146  %A_V_load_7 = load i8* %A_V_addr_7, align 1

ST_6: B_7_V_addr (280)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:148  %B_7_V_addr = getelementptr [32 x i8]* %B_7_V, i64 0, i64 %channel_out1

ST_6: B_7_V_load (281)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:149  %B_7_V_load = load i8* %B_7_V_addr, align 1


 <State 7>: 6.41ns
ST_7: tmp_14_0_2_2_mid2_v_s (163)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:31  %tmp_14_0_2_2_mid2_v_s = add i17 %tmp_14_0_2_mid2_v_v, 2

ST_7: tmp_14_0_2_2_mid2_v (164)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:32  %tmp_14_0_2_2_mid2_v = sext i17 %tmp_14_0_2_2_mid2_v_s to i32

ST_7: tmp_14_0_2_2_mid2 (165)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:33  %tmp_14_0_2_2_mid2 = zext i32 %tmp_14_0_2_2_mid2_v to i64

ST_7: tmp_14_1_mid2 (167)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:35  %tmp_14_1_mid2 = zext i17 %tmp_14_1_mid2_v to i64

ST_7: A_V_load_6 (268)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:136  %A_V_load_6 = load i8* %A_V_addr_6, align 1

ST_7: OP1_V_0_2 (269)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:137  %OP1_V_0_2 = sext i8 %A_V_load_6 to i12

ST_7: B_6_V_load (271)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:139  %B_6_V_load = load i8* %B_6_V_addr, align 1

ST_7: OP2_V_0_2 (272)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:140  %OP2_V_0_2 = sext i8 %B_6_V_load to i12

ST_7: p_Val2_1_0_2 (273)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:141  %p_Val2_1_0_2 = mul i12 %OP2_V_0_2, %OP1_V_0_2

ST_7: tmp_17_0_2 (275)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:143  %tmp_17_0_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_10, i4 0)

ST_7: p_Val2_2_0_2 (276)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:144  %p_Val2_2_0_2 = add i12 %tmp_17_0_2, %p_Val2_1_0_2

ST_7: A_V_load_7 (278)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:146  %A_V_load_7 = load i8* %A_V_addr_7, align 1

ST_7: OP1_V_0_2_1 (279)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:147  %OP1_V_0_2_1 = sext i8 %A_V_load_7 to i12

ST_7: B_7_V_load (281)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:149  %B_7_V_load = load i8* %B_7_V_addr, align 1

ST_7: OP2_V_0_2_1 (282)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:150  %OP2_V_0_2_1 = sext i8 %B_7_V_load to i12

ST_7: p_Val2_1_0_2_1 (283)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:151  %p_Val2_1_0_2_1 = mul i12 %OP2_V_0_2_1, %OP1_V_0_2_1

ST_7: tmp_11 (284)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:152  %tmp_11 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_2, i32 4, i32 11)

ST_7: tmp_17_0_2_1 (285)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:153  %tmp_17_0_2_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_11, i4 0)

ST_7: p_Val2_2_0_2_1 (286)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:154  %p_Val2_2_0_2_1 = add i12 %tmp_17_0_2_1, %p_Val2_1_0_2_1

ST_7: A_V_addr_8 (287)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:155  %A_V_addr_8 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_0_2_2_mid2

ST_7: A_V_load_8 (288)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:156  %A_V_load_8 = load i8* %A_V_addr_8, align 1

ST_7: B_8_V_addr (290)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:158  %B_8_V_addr = getelementptr [32 x i8]* %B_8_V, i64 0, i64 %channel_out1

ST_7: B_8_V_load (291)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:159  %B_8_V_load = load i8* %B_8_V_addr, align 1

ST_7: tmp_12 (294)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:162  %tmp_12 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_2_1, i32 4, i32 11)

ST_7: A_V_addr_9 (297)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:165  %A_V_addr_9 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_mid2

ST_7: A_V_load_9 (298)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:166  %A_V_load_9 = load i8* %A_V_addr_9, align 1

ST_7: B_9_V_addr (300)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:168  %B_9_V_addr = getelementptr [32 x i8]* %B_9_V, i64 0, i64 %channel_out1

ST_7: B_9_V_load (301)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:169  %B_9_V_load = load i8* %B_9_V_addr, align 1


 <State 8>: 6.41ns
ST_8: tmp_14_1_0_1_mid2_v (168)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:36  %tmp_14_1_0_1_mid2_v = add i17 %tmp_14_1_mid2_v, 1

ST_8: tmp_14_1_0_1_mid2 (169)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:37  %tmp_14_1_0_1_mid2 = zext i17 %tmp_14_1_0_1_mid2_v to i64

ST_8: tmp_14_1_0_2_mid2_v (170)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:38  %tmp_14_1_0_2_mid2_v = add i17 %tmp_14_1_mid2_v, 2

ST_8: tmp_14_1_0_2_mid2 (171)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:39  %tmp_14_1_0_2_mid2 = zext i17 %tmp_14_1_0_2_mid2_v to i64

ST_8: A_V_load_8 (288)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:156  %A_V_load_8 = load i8* %A_V_addr_8, align 1

ST_8: OP1_V_0_2_2 (289)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:157  %OP1_V_0_2_2 = sext i8 %A_V_load_8 to i12

ST_8: B_8_V_load (291)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:159  %B_8_V_load = load i8* %B_8_V_addr, align 1

ST_8: OP2_V_0_2_2 (292)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:160  %OP2_V_0_2_2 = sext i8 %B_8_V_load to i12

ST_8: p_Val2_1_0_2_2 (293)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:161  %p_Val2_1_0_2_2 = mul i12 %OP2_V_0_2_2, %OP1_V_0_2_2

ST_8: tmp_17_0_2_2 (295)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:163  %tmp_17_0_2_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_12, i4 0)

ST_8: p_Val2_2_0_2_2 (296)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:164  %p_Val2_2_0_2_2 = add i12 %tmp_17_0_2_2, %p_Val2_1_0_2_2

ST_8: A_V_load_9 (298)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:166  %A_V_load_9 = load i8* %A_V_addr_9, align 1

ST_8: OP1_V_1 (299)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:167  %OP1_V_1 = sext i8 %A_V_load_9 to i12

ST_8: B_9_V_load (301)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:169  %B_9_V_load = load i8* %B_9_V_addr, align 1

ST_8: OP2_V_1 (302)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:170  %OP2_V_1 = sext i8 %B_9_V_load to i12

ST_8: p_Val2_1_1 (303)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:171  %p_Val2_1_1 = mul i12 %OP2_V_1, %OP1_V_1

ST_8: tmp_13 (304)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:172  %tmp_13 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_0_2_2, i32 4, i32 11)

ST_8: tmp_17_1 (305)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:173  %tmp_17_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_13, i4 0)

ST_8: p_Val2_2_1 (306)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:174  %p_Val2_2_1 = add i12 %tmp_17_1, %p_Val2_1_1

ST_8: A_V_addr_10 (307)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:175  %A_V_addr_10 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_0_1_mid2

ST_8: A_V_load_10 (308)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:176  %A_V_load_10 = load i8* %A_V_addr_10, align 1

ST_8: B_10_V_addr (310)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:178  %B_10_V_addr = getelementptr [32 x i8]* %B_10_V, i64 0, i64 %channel_out1

ST_8: B_10_V_load (311)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:179  %B_10_V_load = load i8* %B_10_V_addr, align 1

ST_8: tmp_14 (314)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:182  %tmp_14 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1, i32 4, i32 11)

ST_8: A_V_addr_11 (317)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:185  %A_V_addr_11 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_0_2_mid2

ST_8: A_V_load_11 (318)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:186  %A_V_load_11 = load i8* %A_V_addr_11, align 1

ST_8: B_11_V_addr (320)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:188  %B_11_V_addr = getelementptr [32 x i8]* %B_11_V, i64 0, i64 %channel_out1

ST_8: B_11_V_load (321)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:189  %B_11_V_load = load i8* %B_11_V_addr, align 1


 <State 9>: 6.41ns
ST_9: tmp_14_1_1_mid2 (173)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:41  %tmp_14_1_1_mid2 = zext i17 %tmp_14_1_1_mid2_v to i64

ST_9: tmp_14_1_1_1_mid2_v (174)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:42  %tmp_14_1_1_1_mid2_v = add i17 %tmp_14_1_1_mid2_v, 1

ST_9: tmp_14_1_1_1_mid2 (175)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:43  %tmp_14_1_1_1_mid2 = zext i17 %tmp_14_1_1_1_mid2_v to i64

ST_9: A_V_load_10 (308)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:176  %A_V_load_10 = load i8* %A_V_addr_10, align 1

ST_9: OP1_V_1_0_1 (309)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:177  %OP1_V_1_0_1 = sext i8 %A_V_load_10 to i12

ST_9: B_10_V_load (311)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:179  %B_10_V_load = load i8* %B_10_V_addr, align 1

ST_9: OP2_V_1_0_1 (312)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:180  %OP2_V_1_0_1 = sext i8 %B_10_V_load to i12

ST_9: p_Val2_1_1_0_1 (313)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:181  %p_Val2_1_1_0_1 = mul i12 %OP2_V_1_0_1, %OP1_V_1_0_1

ST_9: tmp_17_1_0_1 (315)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:183  %tmp_17_1_0_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_14, i4 0)

ST_9: p_Val2_2_1_0_1 (316)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:184  %p_Val2_2_1_0_1 = add i12 %tmp_17_1_0_1, %p_Val2_1_1_0_1

ST_9: A_V_load_11 (318)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:186  %A_V_load_11 = load i8* %A_V_addr_11, align 1

ST_9: OP1_V_1_0_2 (319)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:187  %OP1_V_1_0_2 = sext i8 %A_V_load_11 to i12

ST_9: B_11_V_load (321)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:189  %B_11_V_load = load i8* %B_11_V_addr, align 1

ST_9: OP2_V_1_0_2 (322)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:190  %OP2_V_1_0_2 = sext i8 %B_11_V_load to i12

ST_9: p_Val2_1_1_0_2 (323)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:191  %p_Val2_1_1_0_2 = mul i12 %OP2_V_1_0_2, %OP1_V_1_0_2

ST_9: tmp_15 (324)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:192  %tmp_15 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_0_1, i32 4, i32 11)

ST_9: tmp_17_1_0_2 (325)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:193  %tmp_17_1_0_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_15, i4 0)

ST_9: p_Val2_2_1_0_2 (326)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:194  %p_Val2_2_1_0_2 = add i12 %tmp_17_1_0_2, %p_Val2_1_1_0_2

ST_9: A_V_addr_12 (327)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:195  %A_V_addr_12 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_1_mid2

ST_9: A_V_load_12 (328)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:196  %A_V_load_12 = load i8* %A_V_addr_12, align 1

ST_9: B_12_V_addr (330)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:198  %B_12_V_addr = getelementptr [32 x i8]* %B_12_V, i64 0, i64 %channel_out1

ST_9: B_12_V_load (331)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:199  %B_12_V_load = load i8* %B_12_V_addr, align 1

ST_9: tmp_16 (334)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:202  %tmp_16 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_0_2, i32 4, i32 11)

ST_9: A_V_addr_13 (337)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:205  %A_V_addr_13 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_1_1_mid2

ST_9: A_V_load_13 (338)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:206  %A_V_load_13 = load i8* %A_V_addr_13, align 1

ST_9: B_13_V_addr (340)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:208  %B_13_V_addr = getelementptr [32 x i8]* %B_13_V, i64 0, i64 %channel_out1

ST_9: B_13_V_load (341)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:209  %B_13_V_load = load i8* %B_13_V_addr, align 1


 <State 10>: 6.41ns
ST_10: tmp_14_1_1_2_mid2_v (176)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:44  %tmp_14_1_1_2_mid2_v = add i17 %tmp_14_1_1_mid2_v, 2

ST_10: tmp_14_1_1_2_mid2 (177)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:45  %tmp_14_1_1_2_mid2 = zext i17 %tmp_14_1_1_2_mid2_v to i64

ST_10: tmp_14_1_2_mid2 (179)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:47  %tmp_14_1_2_mid2 = zext i17 %tmp_14_1_2_mid2_v to i64

ST_10: A_V_load_12 (328)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:196  %A_V_load_12 = load i8* %A_V_addr_12, align 1

ST_10: OP1_V_1_1 (329)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:197  %OP1_V_1_1 = sext i8 %A_V_load_12 to i12

ST_10: B_12_V_load (331)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:199  %B_12_V_load = load i8* %B_12_V_addr, align 1

ST_10: OP2_V_1_1 (332)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:200  %OP2_V_1_1 = sext i8 %B_12_V_load to i12

ST_10: p_Val2_1_1_1 (333)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:201  %p_Val2_1_1_1 = mul i12 %OP2_V_1_1, %OP1_V_1_1

ST_10: tmp_17_1_1 (335)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:203  %tmp_17_1_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_16, i4 0)

ST_10: p_Val2_2_1_1 (336)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:204  %p_Val2_2_1_1 = add i12 %tmp_17_1_1, %p_Val2_1_1_1

ST_10: A_V_load_13 (338)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:206  %A_V_load_13 = load i8* %A_V_addr_13, align 1

ST_10: OP1_V_1_1_1 (339)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:207  %OP1_V_1_1_1 = sext i8 %A_V_load_13 to i12

ST_10: B_13_V_load (341)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:209  %B_13_V_load = load i8* %B_13_V_addr, align 1

ST_10: OP2_V_1_1_1 (342)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:210  %OP2_V_1_1_1 = sext i8 %B_13_V_load to i12

ST_10: p_Val2_1_1_1_1 (343)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:211  %p_Val2_1_1_1_1 = mul i12 %OP2_V_1_1_1, %OP1_V_1_1_1

ST_10: tmp_17 (344)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:212  %tmp_17 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_1, i32 4, i32 11)

ST_10: tmp_17_1_1_1 (345)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:213  %tmp_17_1_1_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_17, i4 0)

ST_10: p_Val2_2_1_1_1 (346)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:214  %p_Val2_2_1_1_1 = add i12 %tmp_17_1_1_1, %p_Val2_1_1_1_1

ST_10: A_V_addr_14 (347)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:215  %A_V_addr_14 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_1_2_mid2

ST_10: A_V_load_14 (348)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:216  %A_V_load_14 = load i8* %A_V_addr_14, align 1

ST_10: B_14_V_addr (350)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:218  %B_14_V_addr = getelementptr [32 x i8]* %B_14_V, i64 0, i64 %channel_out1

ST_10: B_14_V_load (351)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:219  %B_14_V_load = load i8* %B_14_V_addr, align 1

ST_10: tmp_18 (354)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:222  %tmp_18 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_1_1, i32 4, i32 11)

ST_10: A_V_addr_15 (357)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:225  %A_V_addr_15 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_2_mid2

ST_10: A_V_load_15 (358)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:226  %A_V_load_15 = load i8* %A_V_addr_15, align 1

ST_10: B_15_V_addr (360)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:228  %B_15_V_addr = getelementptr [32 x i8]* %B_15_V, i64 0, i64 %channel_out1

ST_10: B_15_V_load (361)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:229  %B_15_V_load = load i8* %B_15_V_addr, align 1


 <State 11>: 6.41ns
ST_11: tmp_14_1_2_1_mid2_v (180)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:48  %tmp_14_1_2_1_mid2_v = add i17 %tmp_14_1_2_mid2_v, 1

ST_11: tmp_14_1_2_1_mid2 (181)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:49  %tmp_14_1_2_1_mid2 = zext i17 %tmp_14_1_2_1_mid2_v to i64

ST_11: tmp_14_1_2_2_mid2_v (182)  [1/1] 1.03ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:50  %tmp_14_1_2_2_mid2_v = add i17 %tmp_14_1_2_mid2_v, 2

ST_11: tmp_14_1_2_2_mid2 (183)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:51  %tmp_14_1_2_2_mid2 = zext i17 %tmp_14_1_2_2_mid2_v to i64

ST_11: A_V_load_14 (348)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:216  %A_V_load_14 = load i8* %A_V_addr_14, align 1

ST_11: OP1_V_1_1_2 (349)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:217  %OP1_V_1_1_2 = sext i8 %A_V_load_14 to i12

ST_11: B_14_V_load (351)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:219  %B_14_V_load = load i8* %B_14_V_addr, align 1

ST_11: OP2_V_1_1_2 (352)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:220  %OP2_V_1_1_2 = sext i8 %B_14_V_load to i12

ST_11: p_Val2_1_1_1_2 (353)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:221  %p_Val2_1_1_1_2 = mul i12 %OP2_V_1_1_2, %OP1_V_1_1_2

ST_11: tmp_17_1_1_2 (355)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:223  %tmp_17_1_1_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_18, i4 0)

ST_11: p_Val2_2_1_1_2 (356)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:224  %p_Val2_2_1_1_2 = add i12 %tmp_17_1_1_2, %p_Val2_1_1_1_2

ST_11: A_V_load_15 (358)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:226  %A_V_load_15 = load i8* %A_V_addr_15, align 1

ST_11: OP1_V_1_2 (359)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:227  %OP1_V_1_2 = sext i8 %A_V_load_15 to i12

ST_11: B_15_V_load (361)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:229  %B_15_V_load = load i8* %B_15_V_addr, align 1

ST_11: OP2_V_1_2 (362)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:230  %OP2_V_1_2 = sext i8 %B_15_V_load to i12

ST_11: p_Val2_1_1_2 (363)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:231  %p_Val2_1_1_2 = mul i12 %OP2_V_1_2, %OP1_V_1_2

ST_11: tmp_19 (364)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:232  %tmp_19 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_1_2, i32 4, i32 11)

ST_11: tmp_17_1_2 (365)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:233  %tmp_17_1_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_19, i4 0)

ST_11: p_Val2_2_1_2 (366)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:234  %p_Val2_2_1_2 = add i12 %tmp_17_1_2, %p_Val2_1_1_2

ST_11: A_V_addr_16 (367)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:235  %A_V_addr_16 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_2_1_mid2

ST_11: A_V_load_16 (368)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:236  %A_V_load_16 = load i8* %A_V_addr_16, align 1

ST_11: B_16_V_addr (370)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:238  %B_16_V_addr = getelementptr [32 x i8]* %B_16_V, i64 0, i64 %channel_out1

ST_11: B_16_V_load (371)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:239  %B_16_V_load = load i8* %B_16_V_addr, align 1

ST_11: tmp_20 (374)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:242  %tmp_20 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_2, i32 4, i32 11)

ST_11: A_V_addr_17 (377)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:245  %A_V_addr_17 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_1_2_2_mid2

ST_11: A_V_load_17 (378)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:246  %A_V_load_17 = load i8* %A_V_addr_17, align 1

ST_11: B_17_V_addr (380)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:248  %B_17_V_addr = getelementptr [32 x i8]* %B_17_V, i64 0, i64 %channel_out1

ST_11: B_17_V_load (381)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:249  %B_17_V_load = load i8* %B_17_V_addr, align 1


 <State 12>: 6.41ns
ST_12: tmp_14_2_mid2_v_v (184)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:52  %tmp_14_2_mid2_v_v = zext i8 %shift_y_cast6_mid2_v to i18

ST_12: tmp_14_2_mid2_v (185)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:53  %tmp_14_2_mid2_v = add i18 %tmp_10_2, %tmp_14_2_mid2_v_v

ST_12: tmp_14_2_mid2 (186)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:54  %tmp_14_2_mid2 = zext i18 %tmp_14_2_mid2_v to i64

ST_12: tmp_14_2_0_1_mid2_v (187)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:55  %tmp_14_2_0_1_mid2_v = add i18 %tmp_14_2_mid2_v, 1

ST_12: tmp_14_2_0_1_mid2 (188)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:56  %tmp_14_2_0_1_mid2 = zext i18 %tmp_14_2_0_1_mid2_v to i64

ST_12: tmp_14_2_1_mid2_v (191)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:59  %tmp_14_2_1_mid2_v = add i18 %tmp_10_2_1, %tmp_14_2_mid2_v_v

ST_12: tmp_14_2_2_mid2_v (197)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:65  %tmp_14_2_2_mid2_v = add i18 %tmp_10_2_2, %tmp_14_2_mid2_v_v

ST_12: A_V_load_16 (368)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:236  %A_V_load_16 = load i8* %A_V_addr_16, align 1

ST_12: OP1_V_1_2_1 (369)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:237  %OP1_V_1_2_1 = sext i8 %A_V_load_16 to i12

ST_12: B_16_V_load (371)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:239  %B_16_V_load = load i8* %B_16_V_addr, align 1

ST_12: OP2_V_1_2_1 (372)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:240  %OP2_V_1_2_1 = sext i8 %B_16_V_load to i12

ST_12: p_Val2_1_1_2_1 (373)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:241  %p_Val2_1_1_2_1 = mul i12 %OP2_V_1_2_1, %OP1_V_1_2_1

ST_12: tmp_17_1_2_1 (375)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:243  %tmp_17_1_2_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_20, i4 0)

ST_12: p_Val2_2_1_2_1 (376)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:244  %p_Val2_2_1_2_1 = add i12 %tmp_17_1_2_1, %p_Val2_1_1_2_1

ST_12: A_V_load_17 (378)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:246  %A_V_load_17 = load i8* %A_V_addr_17, align 1

ST_12: OP1_V_1_2_2 (379)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:247  %OP1_V_1_2_2 = sext i8 %A_V_load_17 to i12

ST_12: B_17_V_load (381)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:249  %B_17_V_load = load i8* %B_17_V_addr, align 1

ST_12: OP2_V_1_2_2 (382)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:250  %OP2_V_1_2_2 = sext i8 %B_17_V_load to i12

ST_12: p_Val2_1_1_2_2 (383)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:251  %p_Val2_1_1_2_2 = mul i12 %OP2_V_1_2_2, %OP1_V_1_2_2

ST_12: tmp_21 (384)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:252  %tmp_21 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_2_1, i32 4, i32 11)

ST_12: tmp_17_1_2_2 (385)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:253  %tmp_17_1_2_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_21, i4 0)

ST_12: p_Val2_2_1_2_2 (386)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:254  %p_Val2_2_1_2_2 = add i12 %tmp_17_1_2_2, %p_Val2_1_1_2_2

ST_12: A_V_addr_18 (387)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:255  %A_V_addr_18 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_mid2

ST_12: A_V_load_18 (388)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:256  %A_V_load_18 = load i8* %A_V_addr_18, align 1

ST_12: B_18_V_addr (390)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:258  %B_18_V_addr = getelementptr [32 x i8]* %B_18_V, i64 0, i64 %channel_out1

ST_12: B_18_V_load (391)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:259  %B_18_V_load = load i8* %B_18_V_addr, align 1

ST_12: tmp_22 (394)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:262  %tmp_22 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_1_2_2, i32 4, i32 11)

ST_12: A_V_addr_19 (397)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:265  %A_V_addr_19 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_0_1_mid2

ST_12: A_V_load_19 (398)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:266  %A_V_load_19 = load i8* %A_V_addr_19, align 1

ST_12: B_19_V_addr (400)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:268  %B_19_V_addr = getelementptr [32 x i8]* %B_19_V, i64 0, i64 %channel_out1

ST_12: B_19_V_load (401)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:269  %B_19_V_load = load i8* %B_19_V_addr, align 1

ST_12: B_20_V_addr (410)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:278  %B_20_V_addr = getelementptr [32 x i8]* %B_20_V, i64 0, i64 %channel_out1

ST_12: B_20_V_load (411)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:279  %B_20_V_load = load i8* %B_20_V_addr, align 1

ST_12: B_21_V_addr (420)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:288  %B_21_V_addr = getelementptr [32 x i8]* %B_21_V, i64 0, i64 %channel_out1

ST_12: B_21_V_load (421)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:289  %B_21_V_load = load i8* %B_21_V_addr, align 1

ST_12: B_22_V_addr (430)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:298  %B_22_V_addr = getelementptr [32 x i8]* %B_22_V, i64 0, i64 %channel_out1

ST_12: B_22_V_load (431)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:299  %B_22_V_load = load i8* %B_22_V_addr, align 1

ST_12: B_23_V_addr (440)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:308  %B_23_V_addr = getelementptr [32 x i8]* %B_23_V, i64 0, i64 %channel_out1

ST_12: B_23_V_load (441)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:309  %B_23_V_load = load i8* %B_23_V_addr, align 1

ST_12: B_24_V_addr (450)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:318  %B_24_V_addr = getelementptr [32 x i8]* %B_24_V, i64 0, i64 %channel_out1

ST_12: B_24_V_load (451)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:319  %B_24_V_load = load i8* %B_24_V_addr, align 1

ST_12: B_25_V_addr (460)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:328  %B_25_V_addr = getelementptr [32 x i8]* %B_25_V, i64 0, i64 %channel_out1

ST_12: B_25_V_load (461)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:329  %B_25_V_load = load i8* %B_25_V_addr, align 1

ST_12: B_26_V_addr (470)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:338  %B_26_V_addr = getelementptr [32 x i8]* %B_26_V, i64 0, i64 %channel_out1

ST_12: B_26_V_load (471)  [2/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:339  %B_26_V_load = load i8* %B_26_V_addr, align 1


 <State 13>: 6.41ns
ST_13: tmp_14_2_0_2_mid2_v (189)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:57  %tmp_14_2_0_2_mid2_v = add i18 %tmp_14_2_mid2_v, 2

ST_13: tmp_14_2_0_2_mid2 (190)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:58  %tmp_14_2_0_2_mid2 = zext i18 %tmp_14_2_0_2_mid2_v to i64

ST_13: tmp_14_2_1_mid2 (192)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:60  %tmp_14_2_1_mid2 = zext i18 %tmp_14_2_1_mid2_v to i64

ST_13: A_V_load_18 (388)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:256  %A_V_load_18 = load i8* %A_V_addr_18, align 1

ST_13: OP1_V_2 (389)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:257  %OP1_V_2 = sext i8 %A_V_load_18 to i12

ST_13: B_18_V_load (391)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:259  %B_18_V_load = load i8* %B_18_V_addr, align 1

ST_13: OP2_V_2 (392)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:260  %OP2_V_2 = sext i8 %B_18_V_load to i12

ST_13: p_Val2_1_2 (393)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:261  %p_Val2_1_2 = mul i12 %OP2_V_2, %OP1_V_2

ST_13: tmp_17_2 (395)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:263  %tmp_17_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_22, i4 0)

ST_13: p_Val2_2_2 (396)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:264  %p_Val2_2_2 = add i12 %tmp_17_2, %p_Val2_1_2

ST_13: A_V_load_19 (398)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:266  %A_V_load_19 = load i8* %A_V_addr_19, align 1

ST_13: OP1_V_2_0_1 (399)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:267  %OP1_V_2_0_1 = sext i8 %A_V_load_19 to i12

ST_13: B_19_V_load (401)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:269  %B_19_V_load = load i8* %B_19_V_addr, align 1

ST_13: OP2_V_2_0_1 (402)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:270  %OP2_V_2_0_1 = sext i8 %B_19_V_load to i12

ST_13: p_Val2_1_2_0_1 (403)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:271  %p_Val2_1_2_0_1 = mul i12 %OP2_V_2_0_1, %OP1_V_2_0_1

ST_13: tmp_23 (404)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:272  %tmp_23 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2, i32 4, i32 11)

ST_13: tmp_17_2_0_1 (405)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:273  %tmp_17_2_0_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_23, i4 0)

ST_13: p_Val2_2_2_0_1 (406)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:274  %p_Val2_2_2_0_1 = add i12 %tmp_17_2_0_1, %p_Val2_1_2_0_1

ST_13: A_V_addr_20 (407)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:275  %A_V_addr_20 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_0_2_mid2

ST_13: A_V_load_20 (408)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:276  %A_V_load_20 = load i8* %A_V_addr_20, align 1

ST_13: B_20_V_load (411)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:279  %B_20_V_load = load i8* %B_20_V_addr, align 1

ST_13: tmp_24 (414)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:282  %tmp_24 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_0_1, i32 4, i32 11)

ST_13: A_V_addr_21 (417)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:285  %A_V_addr_21 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_1_mid2

ST_13: A_V_load_21 (418)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:286  %A_V_load_21 = load i8* %A_V_addr_21, align 1

ST_13: B_21_V_load (421)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:289  %B_21_V_load = load i8* %B_21_V_addr, align 1

ST_13: B_22_V_load (431)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:299  %B_22_V_load = load i8* %B_22_V_addr, align 1

ST_13: B_23_V_load (441)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:309  %B_23_V_load = load i8* %B_23_V_addr, align 1

ST_13: B_24_V_load (451)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:319  %B_24_V_load = load i8* %B_24_V_addr, align 1

ST_13: B_25_V_load (461)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:329  %B_25_V_load = load i8* %B_25_V_addr, align 1

ST_13: B_26_V_load (471)  [1/2] 0.79ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:339  %B_26_V_load = load i8* %B_26_V_addr, align 1


 <State 14>: 6.41ns
ST_14: tmp_14_2_1_1_mid2_v (193)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:61  %tmp_14_2_1_1_mid2_v = add i18 %tmp_14_2_1_mid2_v, 1

ST_14: tmp_14_2_1_1_mid2 (194)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:62  %tmp_14_2_1_1_mid2 = zext i18 %tmp_14_2_1_1_mid2_v to i64

ST_14: tmp_14_2_1_2_mid2_v (195)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:63  %tmp_14_2_1_2_mid2_v = add i18 %tmp_14_2_1_mid2_v, 2

ST_14: tmp_14_2_1_2_mid2 (196)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:64  %tmp_14_2_1_2_mid2 = zext i18 %tmp_14_2_1_2_mid2_v to i64

ST_14: A_V_load_20 (408)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:276  %A_V_load_20 = load i8* %A_V_addr_20, align 1

ST_14: OP1_V_2_0_2 (409)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:277  %OP1_V_2_0_2 = sext i8 %A_V_load_20 to i12

ST_14: OP2_V_2_0_2 (412)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:280  %OP2_V_2_0_2 = sext i8 %B_20_V_load to i12

ST_14: p_Val2_1_2_0_2 (413)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:281  %p_Val2_1_2_0_2 = mul i12 %OP2_V_2_0_2, %OP1_V_2_0_2

ST_14: tmp_17_2_0_2 (415)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:283  %tmp_17_2_0_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_24, i4 0)

ST_14: p_Val2_2_2_0_2 (416)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:284  %p_Val2_2_2_0_2 = add i12 %tmp_17_2_0_2, %p_Val2_1_2_0_2

ST_14: A_V_load_21 (418)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:286  %A_V_load_21 = load i8* %A_V_addr_21, align 1

ST_14: OP1_V_2_1 (419)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:287  %OP1_V_2_1 = sext i8 %A_V_load_21 to i12

ST_14: OP2_V_2_1 (422)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:290  %OP2_V_2_1 = sext i8 %B_21_V_load to i12

ST_14: p_Val2_1_2_1 (423)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:291  %p_Val2_1_2_1 = mul i12 %OP2_V_2_1, %OP1_V_2_1

ST_14: tmp_25 (424)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:292  %tmp_25 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_0_2, i32 4, i32 11)

ST_14: tmp_17_2_1 (425)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:293  %tmp_17_2_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_25, i4 0)

ST_14: p_Val2_2_2_1 (426)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:294  %p_Val2_2_2_1 = add i12 %tmp_17_2_1, %p_Val2_1_2_1

ST_14: A_V_addr_22 (427)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:295  %A_V_addr_22 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_1_1_mid2

ST_14: A_V_load_22 (428)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:296  %A_V_load_22 = load i8* %A_V_addr_22, align 1

ST_14: tmp_26 (434)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:302  %tmp_26 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_1, i32 4, i32 11)

ST_14: A_V_addr_23 (437)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:305  %A_V_addr_23 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_1_2_mid2

ST_14: A_V_load_23 (438)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:306  %A_V_load_23 = load i8* %A_V_addr_23, align 1


 <State 15>: 6.41ns
ST_15: tmp_14_2_2_mid2 (198)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:66  %tmp_14_2_2_mid2 = zext i18 %tmp_14_2_2_mid2_v to i64

ST_15: tmp_14_2_2_1_mid2_v (199)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:67  %tmp_14_2_2_1_mid2_v = add i18 %tmp_14_2_2_mid2_v, 1

ST_15: tmp_14_2_2_1_mid2 (200)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:68  %tmp_14_2_2_1_mid2 = zext i18 %tmp_14_2_2_1_mid2_v to i64

ST_15: A_V_load_22 (428)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:296  %A_V_load_22 = load i8* %A_V_addr_22, align 1

ST_15: OP1_V_2_1_1 (429)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:297  %OP1_V_2_1_1 = sext i8 %A_V_load_22 to i12

ST_15: OP2_V_2_1_1 (432)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:300  %OP2_V_2_1_1 = sext i8 %B_22_V_load to i12

ST_15: p_Val2_1_2_1_1 (433)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:301  %p_Val2_1_2_1_1 = mul i12 %OP2_V_2_1_1, %OP1_V_2_1_1

ST_15: tmp_17_2_1_1 (435)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:303  %tmp_17_2_1_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_26, i4 0)

ST_15: p_Val2_2_2_1_1 (436)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:304  %p_Val2_2_2_1_1 = add i12 %tmp_17_2_1_1, %p_Val2_1_2_1_1

ST_15: A_V_load_23 (438)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:306  %A_V_load_23 = load i8* %A_V_addr_23, align 1

ST_15: OP1_V_2_1_2 (439)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:307  %OP1_V_2_1_2 = sext i8 %A_V_load_23 to i12

ST_15: OP2_V_2_1_2 (442)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:310  %OP2_V_2_1_2 = sext i8 %B_23_V_load to i12

ST_15: p_Val2_1_2_1_2 (443)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:311  %p_Val2_1_2_1_2 = mul i12 %OP2_V_2_1_2, %OP1_V_2_1_2

ST_15: tmp_27 (444)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:312  %tmp_27 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_1_1, i32 4, i32 11)

ST_15: tmp_17_2_1_2 (445)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:313  %tmp_17_2_1_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_27, i4 0)

ST_15: p_Val2_2_2_1_2 (446)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:314  %p_Val2_2_2_1_2 = add i12 %tmp_17_2_1_2, %p_Val2_1_2_1_2

ST_15: A_V_addr_24 (447)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:315  %A_V_addr_24 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_2_mid2

ST_15: A_V_load_24 (448)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:316  %A_V_load_24 = load i8* %A_V_addr_24, align 1

ST_15: tmp_28 (454)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:322  %tmp_28 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_1_2, i32 4, i32 11)

ST_15: A_V_addr_25 (457)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:325  %A_V_addr_25 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_2_1_mid2

ST_15: A_V_load_25 (458)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:326  %A_V_load_25 = load i8* %A_V_addr_25, align 1


 <State 16>: 6.41ns
ST_16: tmp_14_2_2_2_mid2_v (201)  [1/1] 1.04ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:69  %tmp_14_2_2_2_mid2_v = add i18 %tmp_14_2_2_mid2_v, 2

ST_16: tmp_14_2_2_2_mid2 (202)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:70  %tmp_14_2_2_2_mid2 = zext i18 %tmp_14_2_2_2_mid2_v to i64

ST_16: A_V_load_24 (448)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:316  %A_V_load_24 = load i8* %A_V_addr_24, align 1

ST_16: OP1_V_2_2 (449)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:317  %OP1_V_2_2 = sext i8 %A_V_load_24 to i12

ST_16: OP2_V_2_2 (452)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:320  %OP2_V_2_2 = sext i8 %B_24_V_load to i12

ST_16: p_Val2_1_2_2 (453)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:321  %p_Val2_1_2_2 = mul i12 %OP2_V_2_2, %OP1_V_2_2

ST_16: tmp_17_2_2 (455)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:323  %tmp_17_2_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_28, i4 0)

ST_16: p_Val2_2_2_2 (456)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:324  %p_Val2_2_2_2 = add i12 %tmp_17_2_2, %p_Val2_1_2_2

ST_16: A_V_load_25 (458)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:326  %A_V_load_25 = load i8* %A_V_addr_25, align 1

ST_16: OP1_V_2_2_1 (459)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:327  %OP1_V_2_2_1 = sext i8 %A_V_load_25 to i12

ST_16: OP2_V_2_2_1 (462)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:330  %OP2_V_2_2_1 = sext i8 %B_25_V_load to i12

ST_16: p_Val2_1_2_2_1 (463)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:331  %p_Val2_1_2_2_1 = mul i12 %OP2_V_2_2_1, %OP1_V_2_2_1

ST_16: tmp_29 (464)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:332  %tmp_29 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_2, i32 4, i32 11)

ST_16: tmp_17_2_2_1 (465)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:333  %tmp_17_2_2_1 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_29, i4 0)

ST_16: p_Val2_2_2_2_1 (466)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:334  %p_Val2_2_2_2_1 = add i12 %tmp_17_2_2_1, %p_Val2_1_2_2_1

ST_16: A_V_addr_26 (467)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:335  %A_V_addr_26 = getelementptr [150528 x i8]* %A_V, i64 0, i64 %tmp_14_2_2_2_mid2

ST_16: A_V_load_26 (468)  [2/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:336  %A_V_load_26 = load i8* %A_V_addr_26, align 1

ST_16: tmp_30 (474)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:342  %tmp_30 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_2_1, i32 4, i32 11)


 <State 17>: 5.55ns
ST_17: empty_4 (132)  [1/1] 0.00ns
.preheader.preheader:0  %empty_4 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 7104, i64 7104, i64 7104)

ST_17: tmp_2 (204)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:39
.preheader.preheader:72  %tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str514)

ST_17: StgValue_511 (205)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:40
.preheader.preheader:73  call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str110) nounwind

ST_17: A_V_load_26 (468)  [1/2] 1.35ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:336  %A_V_load_26 = load i8* %A_V_addr_26, align 1

ST_17: OP1_V_2_2_2 (469)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:337  %OP1_V_2_2_2 = sext i8 %A_V_load_26 to i12

ST_17: OP2_V_2_2_2 (472)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:340  %OP2_V_2_2_2 = sext i8 %B_26_V_load to i12

ST_17: p_Val2_1_2_2_2 (473)  [1/1] 0.64ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:341  %p_Val2_1_2_2_2 = mul i12 %OP2_V_2_2_2, %OP1_V_2_2_2

ST_17: tmp_17_2_2_2 (475)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:343  %tmp_17_2_2_2 = call i12 @_ssdm_op_BitConcatenate.i12.i8.i4(i8 %tmp_30, i4 0)

ST_17: p_Val2_2_2_2_2 (476)  [1/1] 2.21ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:344  %p_Val2_2_2_2_2 = add i12 %tmp_17_2_2_2, %p_Val2_1_2_2_2

ST_17: result_V_2_2_2 (477)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:82
.preheader.preheader:345  %result_V_2_2_2 = call i8 @_ssdm_op_PartSelect.i8.i12.i32.i32(i12 %p_Val2_2_2_2_2, i32 4, i32 11)

ST_17: tmp_7 (478)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:89
.preheader.preheader:346  %tmp_7 = zext i21 %output_coords to i64

ST_17: C_V_addr (479)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:89
.preheader.preheader:347  %C_V_addr = getelementptr [1577088 x i8]* %C_V, i64 0, i64 %tmp_7

ST_17: StgValue_521 (480)  [1/1] 1.35ns  loc: maccell/src/macc_par_convs.cpp:89
.preheader.preheader:348  store i8 %result_V_2_2_2, i8* %C_V_addr, align 1

ST_17: empty_5 (481)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:91
.preheader.preheader:349  %empty_5 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str514, i32 %tmp_2)

ST_17: StgValue_523 (483)  [1/1] 0.00ns  loc: maccell/src/macc_par_convs.cpp:38
.preheader.preheader:351  br label %.preheader


 <State 18>: 0.00ns
ST_18: StgValue_524 (485)  [1/1] 0.00ns
.loopexit.loopexit:0  br label %.loopexit



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.755ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('center_x') with incoming values : ('center_x', maccell/src/macc_par_convs.cpp:76) [66]  (0.755 ns)

 <State 2>: 1.97ns
The critical path consists of the following:
	'phi' operation ('center_x') with incoming values : ('center_x', maccell/src/macc_par_convs.cpp:76) [66]  (0 ns)
	'add' operation ('tmp_8_2_1', maccell/src/macc_par_convs.cpp:76) [113]  (0.934 ns)
	'sub' operation ('tmp_10_2_1', maccell/src/macc_par_convs.cpp:76) [117]  (1.04 ns)

 <State 3>: 5.34ns
The critical path consists of the following:
	'phi' operation ('channel_out') with incoming values : ('channel_out', maccell/src/macc_par_convs.cpp:38) [127]  (0 ns)
	'icmp' operation ('tmp_3', maccell/src/macc_par_convs.cpp:38) [133]  (0.87 ns)
	'select' operation ('channel_out_mid2', maccell/src/macc_par_convs.cpp:38) [134]  (0.55 ns)
	'mul' operation ('tmp_5', maccell/src/macc_par_convs.cpp:44) [206]  (0.638 ns)
	'add' operation ('tmp1', maccell/src/macc_par_convs.cpp:44) [207]  (2.21 ns)
	'add' operation ('output_coords', maccell/src/macc_par_convs.cpp:44) [208]  (1.07 ns)

 <State 4>: 5.73ns
The critical path consists of the following:
	'load' operation ('A_V_load', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [210]  (1.35 ns)
	'mul' operation ('p_Val2_1', maccell/src/macc_par_convs.cpp:82) [216]  (2.17 ns)
	'add' operation ('p_Val2_2_0_0_1', maccell/src/macc_par_convs.cpp:82) [226]  (2.21 ns)

 <State 5>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_2', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [228]  (1.35 ns)
	'mul' operation ('p_Val2_1_0_0_2', maccell/src/macc_par_convs.cpp:82) [233]  (0.638 ns)
	'add' operation ('p_Val2_2_0_0_2', maccell/src/macc_par_convs.cpp:82) [236]  (2.21 ns)
	'add' operation ('p_Val2_2_0_1', maccell/src/macc_par_convs.cpp:82) [246]  (2.21 ns)

 <State 6>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_4', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [248]  (1.35 ns)
	'mul' operation ('p_Val2_1_0_1_1', maccell/src/macc_par_convs.cpp:82) [253]  (0.638 ns)
	'add' operation ('p_Val2_2_0_1_1', maccell/src/macc_par_convs.cpp:82) [256]  (2.21 ns)
	'add' operation ('p_Val2_2_0_1_2', maccell/src/macc_par_convs.cpp:82) [266]  (2.21 ns)

 <State 7>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_6', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [268]  (1.35 ns)
	'mul' operation ('p_Val2_1_0_2', maccell/src/macc_par_convs.cpp:82) [273]  (0.638 ns)
	'add' operation ('p_Val2_2_0_2', maccell/src/macc_par_convs.cpp:82) [276]  (2.21 ns)
	'add' operation ('p_Val2_2_0_2_1', maccell/src/macc_par_convs.cpp:82) [286]  (2.21 ns)

 <State 8>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_8', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [288]  (1.35 ns)
	'mul' operation ('p_Val2_1_0_2_2', maccell/src/macc_par_convs.cpp:82) [293]  (0.638 ns)
	'add' operation ('p_Val2_2_0_2_2', maccell/src/macc_par_convs.cpp:82) [296]  (2.21 ns)
	'add' operation ('p_Val2_2_1', maccell/src/macc_par_convs.cpp:82) [306]  (2.21 ns)

 <State 9>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_10', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [308]  (1.35 ns)
	'mul' operation ('p_Val2_1_1_0_1', maccell/src/macc_par_convs.cpp:82) [313]  (0.638 ns)
	'add' operation ('p_Val2_2_1_0_1', maccell/src/macc_par_convs.cpp:82) [316]  (2.21 ns)
	'add' operation ('p_Val2_2_1_0_2', maccell/src/macc_par_convs.cpp:82) [326]  (2.21 ns)

 <State 10>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_12', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [328]  (1.35 ns)
	'mul' operation ('p_Val2_1_1_1', maccell/src/macc_par_convs.cpp:82) [333]  (0.638 ns)
	'add' operation ('p_Val2_2_1_1', maccell/src/macc_par_convs.cpp:82) [336]  (2.21 ns)
	'add' operation ('p_Val2_2_1_1_1', maccell/src/macc_par_convs.cpp:82) [346]  (2.21 ns)

 <State 11>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_14', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [348]  (1.35 ns)
	'mul' operation ('p_Val2_1_1_1_2', maccell/src/macc_par_convs.cpp:82) [353]  (0.638 ns)
	'add' operation ('p_Val2_2_1_1_2', maccell/src/macc_par_convs.cpp:82) [356]  (2.21 ns)
	'add' operation ('p_Val2_2_1_2', maccell/src/macc_par_convs.cpp:82) [366]  (2.21 ns)

 <State 12>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_16', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [368]  (1.35 ns)
	'mul' operation ('p_Val2_1_1_2_1', maccell/src/macc_par_convs.cpp:82) [373]  (0.638 ns)
	'add' operation ('p_Val2_2_1_2_1', maccell/src/macc_par_convs.cpp:82) [376]  (2.21 ns)
	'add' operation ('p_Val2_2_1_2_2', maccell/src/macc_par_convs.cpp:82) [386]  (2.21 ns)

 <State 13>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_18', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [388]  (1.35 ns)
	'mul' operation ('p_Val2_1_2', maccell/src/macc_par_convs.cpp:82) [393]  (0.638 ns)
	'add' operation ('p_Val2_2_2', maccell/src/macc_par_convs.cpp:82) [396]  (2.21 ns)
	'add' operation ('p_Val2_2_2_0_1', maccell/src/macc_par_convs.cpp:82) [406]  (2.21 ns)

 <State 14>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_20', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [408]  (1.35 ns)
	'mul' operation ('p_Val2_1_2_0_2', maccell/src/macc_par_convs.cpp:82) [413]  (0.638 ns)
	'add' operation ('p_Val2_2_2_0_2', maccell/src/macc_par_convs.cpp:82) [416]  (2.21 ns)
	'add' operation ('p_Val2_2_2_1', maccell/src/macc_par_convs.cpp:82) [426]  (2.21 ns)

 <State 15>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_22', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [428]  (1.35 ns)
	'mul' operation ('p_Val2_1_2_1_1', maccell/src/macc_par_convs.cpp:82) [433]  (0.638 ns)
	'add' operation ('p_Val2_2_2_1_1', maccell/src/macc_par_convs.cpp:82) [436]  (2.21 ns)
	'add' operation ('p_Val2_2_2_1_2', maccell/src/macc_par_convs.cpp:82) [446]  (2.21 ns)

 <State 16>: 6.41ns
The critical path consists of the following:
	'load' operation ('A_V_load_24', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [448]  (1.35 ns)
	'mul' operation ('p_Val2_1_2_2', maccell/src/macc_par_convs.cpp:82) [453]  (0.638 ns)
	'add' operation ('p_Val2_2_2_2', maccell/src/macc_par_convs.cpp:82) [456]  (2.21 ns)
	'add' operation ('p_Val2_2_2_2_1', maccell/src/macc_par_convs.cpp:82) [466]  (2.21 ns)

 <State 17>: 5.55ns
The critical path consists of the following:
	'load' operation ('A_V_load_26', maccell/src/macc_par_convs.cpp:82) on array 'A_V' [468]  (1.35 ns)
	'mul' operation ('p_Val2_1_2_2_2', maccell/src/macc_par_convs.cpp:82) [473]  (0.638 ns)
	'add' operation ('p_Val2_2_2_2_2', maccell/src/macc_par_convs.cpp:82) [476]  (2.21 ns)
	'store' operation (maccell/src/macc_par_convs.cpp:89) of variable 'result_V_2_2_2', maccell/src/macc_par_convs.cpp:82 on array 'C_V' [480]  (1.35 ns)

 <State 18>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
